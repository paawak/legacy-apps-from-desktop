/*
 * BankMaster301.java
 *
 * Created on November 16, 2002, 2:26 PM
 */

/**
 *
 * @author  Palash
 */

package view.master;

import java.sql.*;
import java.util.*;
import javax.swing.JOptionPane;
import javax.swing.*;
import java.awt.event.*;
import java.awt.*;

import usefulClasses.generalUtilities.*;

public class BankMasterPanel extends javax.swing.JPanel {

    private SearchPanel Search;
    
    /** Creates new form BankMaster201 */
    public BankMasterPanel() {

        initComponents();
Search = new SearchPanel(rowShown, tableShown, tblDB,new String[] {"Code","Name"});
        
Search.addComponentListener(new java.awt.event.ComponentAdapter() {

            public void componentHidden(java.awt.event.ComponentEvent evt) {
                SearchComponentHidden(evt);
               
            }
        }); //*/     
        
        pnlHome.add(Search, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 70, 150, 300));
                                                                                //x,y,width,heigth
        Search.setVisible(false);
        
        Search.listSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                listSearchKeyPressed(evt);
            }

        }); 
        
        /*Search.listSearch.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                listSearchMouseReleased(evt);
            }
        }); //*/    
        
       

    }
    
    private void SearchComponentHidden(java.awt.event.ComponentEvent evt){

    btAdd.setEnabled(true);
    btModify.setEnabled(true);
    btSearch.setEnabled(true);
    btActivate.setEnabled(true);
    btInactivate.setEnabled(true);
    btExit.setEnabled(true);
    rdbtAllData.setEnabled(true);
    rdbtYData.setEnabled(true);
    rdbtNData.setEnabled(true);
    rdbtAllData.setSelected(true);
    displayData();
    rdbtAllData.requestFocus();        
        
    }

    private void listSearchKeyPressed(java.awt.event.KeyEvent evt) {

int keyCode=evt.getKeyCode();

if(keyCode==evt.VK_ENTER){
    selrow=tblDB.getSelectedRow();
   click=true;
   Search.setVisible(false);
         modifyPressed();
    }//end if        
    }   //end methd. 
    
    private void listSearchMouseReleased(java.awt.event.MouseEvent evt) {
        
        System.out.println("Search.ListDoubleClicked = "+Search.ListDoubleClicked);
 if(Search.ListDoubleClicked)
{

    selrow=Search.SelectedTableRow;
    System.out.println("selrow = "+selrow);
   click=true;
   Search.setVisible(false);
         modifyPressed();
              listClicked2=0;
             tblDB.clearSelection();    
                   }

    }  //*/  
    

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        btngrpViewOptions = new javax.swing.ButtonGroup();
        btngrpViewOptions.add(rdbtAllData);
        btngrpViewOptions.add(rdbtYData);
        btngrpViewOptions.add(rdbtNData);
        pnlHome = new javax.swing.JPanel();
        lblFormHeadingH = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        rdbtAllData = new javax.swing.JRadioButton();
        rdbtNData = new javax.swing.JRadioButton();
        rdbtYData = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDB = new javax.swing.JTable();
        btAdd = new javax.swing.JButton();
        btModify = new javax.swing.JButton();
        btSearch = new javax.swing.JButton();
        btActivate = new javax.swing.JButton();
        btInactivate = new javax.swing.JButton();
        btExit = new javax.swing.JButton();
        pnlAddMod = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtCode = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        btAddSave = new javax.swing.JButton();
        btAddCancel = new javax.swing.JButton();
        btAddSearch = new javax.swing.JButton();
        lblFormHeadingAM = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
        });
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });

        pnlHome.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        pnlHome.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                pnlHomeComponentShown(evt);
            }
            public void componentHidden(java.awt.event.ComponentEvent evt) {
                pnlHomeComponentHidden(evt);
            }
        });
        pnlHome.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                pnlHomeKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                pnlHomeKeyReleased(evt);
            }
        });

        lblFormHeadingH.setFont(new java.awt.Font("Lucida Sans Unicode", 1, 24));
        lblFormHeadingH.setForeground(new java.awt.Color(0, 51, 204));
        lblFormHeadingH.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblFormHeadingH.setText("Bank  Master");
        pnlHome.add(lblFormHeadingH, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 20, 200, -1));

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBorder(new javax.swing.border.TitledBorder(null, "View Options", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 0, 14)));
        btngrpViewOptions.add(rdbtAllData);
        rdbtAllData.setMnemonic('l');
        rdbtAllData.setSelected(true);
        rdbtAllData.setText("All Data");
        rdbtAllData.setToolTipText(" ");
        rdbtAllData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdbtAllDataActionPerformed(evt);
            }
        });
        rdbtAllData.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                rdbtAllDataKeyTyped(evt);
            }
        });

        jPanel1.add(rdbtAllData, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, 80, -1));

        btngrpViewOptions.add(rdbtNData);
        rdbtNData.setMnemonic('I');
        rdbtNData.setText("Inactive Data");
        rdbtNData.setToolTipText(" ");
        rdbtNData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdbtNDataActionPerformed(evt);
            }
        });

        jPanel1.add(rdbtNData, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 20, -1, -1));

        btngrpViewOptions.add(rdbtYData);
        rdbtYData.setMnemonic('t');
        rdbtYData.setText("Active Data");
        rdbtYData.setToolTipText(" ");
        rdbtYData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdbtYDataActionPerformed(evt);
            }
        });

        jPanel1.add(rdbtYData, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 20, -1, -1));

        pnlHome.add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 70, 500, 60));

        jScrollPane1.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                jScrollPane1ComponentResized(evt);
            }
        });

        tblDB.setDebugGraphicsOptions(javax.swing.DebugGraphics.BUFFERED_OPTION);
        displayData();

        tblDB.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tblDBKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tblDBKeyReleased(evt);
            }
        });
        tblDB.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDBMouseClicked(evt);
            }
        });

        jScrollPane1.setViewportView(tblDB);

        pnlHome.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 130, 500, 240));

        btAdd.setMnemonic('A');
        btAdd.setText("ADD");
        btAdd.setToolTipText(" ");
        btAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAddActionPerformed(evt);
            }
        });

        pnlHome.add(btAdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 420, 110, -1));

        btModify.setMnemonic('M');
        btModify.setText("MODIFY");
        btModify.setToolTipText(" ");
        btModify.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btModifyActionPerformed(evt);
            }
        });

        pnlHome.add(btModify, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 420, 110, -1));

        btSearch.setMnemonic('S');
        btSearch.setText("SEARCH");
        btSearch.setToolTipText(" ");
        btSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSearchActionPerformed(evt);
            }
        });

        pnlHome.add(btSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 420, 110, -1));

        btActivate.setMnemonic('C');
        btActivate.setText("ACTIVATE");
        btActivate.setToolTipText(" ");
        btActivate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btActivateActionPerformed(evt);
            }
        });

        pnlHome.add(btActivate, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 420, 110, -1));

        btInactivate.setMnemonic('N');
        btInactivate.setText("INACTIVATE");
        btInactivate.setToolTipText(" ");
        btInactivate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btInactivateActionPerformed(evt);
            }
        });

        pnlHome.add(btInactivate, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 420, 110, -1));

        btExit.setMnemonic('X');
        btExit.setText("EXIT");
        btExit.setToolTipText(" ");
        btExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btExitActionPerformed(evt);
            }
        });

        pnlHome.add(btExit, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 420, 110, -1));

        add(pnlHome, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 750, 750));

        pnlAddMod.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        pnlAddMod.setVisible(false);
        pnlAddMod.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                pnlAddModComponentShown(evt);
            }
            public void componentHidden(java.awt.event.ComponentEvent evt) {
                pnlAddModComponentHidden(evt);
            }
        });

        jLabel2.setText("CODE");
        pnlAddMod.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 140, -1, 20));

        txtCode.setBackground(new java.awt.Color(204, 255, 255));
        txtCode.setEditable(false);
        txtCode.setDisabledTextColor(new java.awt.Color(204, 204, 255));
        pnlAddMod.add(txtCode, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 140, 230, -1));

        jLabel3.setText("NAME");
        pnlAddMod.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 180, -1, 20));

        txtName.setBackground(new java.awt.Color(204, 255, 255));
        txtName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNameKeyTyped(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtNameKeyReleased(evt);
            }
        });

        pnlAddMod.add(txtName, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 180, 230, -1));

        btAddSave.setMnemonic('S');
        btAddSave.setText("SAVE");
        btAddSave.setToolTipText(" ");
        btAddSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAddSaveActionPerformed(evt);
            }
        });

        pnlAddMod.add(btAddSave, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 230, 90, -1));

        btAddCancel.setMnemonic('C');
        btAddCancel.setText("CANCEL");
        btAddCancel.setToolTipText(" ");
        btAddCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAddCancelActionPerformed(evt);
            }
        });

        pnlAddMod.add(btAddCancel, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 230, 90, -1));

        btAddSearch.setMnemonic('R');
        btAddSearch.setText("SEARCH");
        btAddSearch.setToolTipText(" ");
        btAddSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAddSearchActionPerformed(evt);
            }
        });

        pnlAddMod.add(btAddSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 230, 90, -1));

        lblFormHeadingAM.setFont(new java.awt.Font("Lucida Sans Unicode", 1, 24));
        lblFormHeadingAM.setForeground(new java.awt.Color(0, 51, 204));
        lblFormHeadingAM.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblFormHeadingAM.setText("Bank  Master");
        pnlAddMod.add(lblFormHeadingAM, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 20, 200, -1));

        add(pnlAddMod, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 750, 750));

    }
    // </editor-fold>//GEN-END:initComponents

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
/*if(evt.getKeyCode()==evt.VK_ALT)
    Search.btSearchCancel.requestFocus();//*/
    }//GEN-LAST:event_formKeyPressed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
     try{
            accessDB();
            String ss = "SELECT * FROM SemaPhores WHERE TableName = 'BankMaster'";
            
            ResultSet res = stat.executeQuery(ss);
            
            if(!res.next()){
                String ss1="Insert into SemaPhores (TableName,CtrName,MaxCtr) values('"+tableName+"','BM_',1)";
               stat.executeUpdate(ss1);               
            }//end if
            con.close();
        }//end try
        catch(Exception e){
        }//end catch*/
        
    }//GEN-LAST:event_formWindowOpened

    private void btAddSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAddSearchActionPerformed
addCancelPressed();               
        searchPressed();
    }//GEN-LAST:event_btAddSearchActionPerformed

    private void txtNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNameKeyReleased
StringBuffer sb = new StringBuffer(35);
sb.append(txtName.getText());
if(sb.length()>30){
    sb.setLength(30);
    txtName.setText(""+sb);
}
    }//GEN-LAST:event_txtNameKeyReleased

    private void txtNameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNameKeyTyped
    }//GEN-LAST:event_txtNameKeyTyped

    private void tblDBKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblDBKeyReleased
        if( evt.getKeyCode() == evt.VK_UP || evt.getKeyCode() == evt.VK_DOWN || evt.getKeyCode() == evt.VK_TAB){
              selrow = tblDB.getSelectedRow() ;
              
            if(selrow>=0)
                click = true;
            else
                click = false;

        }

    }//GEN-LAST:event_tblDBKeyReleased

    private void tblDBKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblDBKeyPressed


    }//GEN-LAST:event_tblDBKeyPressed

    private void jScrollPane1ComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jScrollPane1ComponentResized
 h=tblDB.getRowHeight()*(rowShown+1); 
 if(h<240)
jScrollPane1.setSize(500,h+5);  
 else
     jScrollPane1.setSize(500,240);  
 // Add your handling code here:
    }//GEN-LAST:event_jScrollPane1ComponentResized

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked

    }//GEN-LAST:event_formMouseClicked

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        displayData();
    }//GEN-LAST:event_formComponentShown

    private void rdbtAllDataKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_rdbtAllDataKeyTyped

    }//GEN-LAST:event_rdbtAllDataKeyTyped

    private void pnlAddModComponentHidden(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_pnlAddModComponentHidden
home=true;
    }//GEN-LAST:event_pnlAddModComponentHidden

    private void pnlHomeComponentHidden(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_pnlHomeComponentHidden
home=false;
    }//GEN-LAST:event_pnlHomeComponentHidden

    private void pnlHomeComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_pnlHomeComponentShown
displayData();
    }//GEN-LAST:event_pnlHomeComponentShown

    private void pnlHomeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pnlHomeKeyReleased

    }//GEN-LAST:event_pnlHomeKeyReleased

    private void pnlHomeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pnlHomeKeyPressed

    }//GEN-LAST:event_pnlHomeKeyPressed

    private void btInactivateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btInactivateActionPerformed
 activatePressed();
 tblDB.clearSelection();    
    }//GEN-LAST:event_btInactivateActionPerformed

    private void btActivateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btActivateActionPerformed
activate=true;
        activatePressed();
activate=false;
tblDB.clearSelection();    
    }//GEN-LAST:event_btActivateActionPerformed

    private void pnlAddModComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_pnlAddModComponentShown
if(add){
    btAddSearch.setEnabled(false);
    btAddSearch.setVisible(false);
    generateCode();

    txtName.requestFocus();
}//end if
else{
    btAddSearch.setEnabled(true);
    btAddSearch.setVisible(true);
    txtName.requestFocus();
    txtName.selectAll();
}//end else
    }//GEN-LAST:event_pnlAddModComponentShown

    private void btExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btExitActionPerformed
this.setVisible(false);
    }//GEN-LAST:event_btExitActionPerformed

    private void btSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSearchActionPerformed
        searchPressed();
    }//GEN-LAST:event_btSearchActionPerformed

    private void btModifyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btModifyActionPerformed
        modifyPressed();
 
    }//GEN-LAST:event_btModifyActionPerformed

    private void btAddCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAddCancelActionPerformed
addCancelPressed();        
    }//GEN-LAST:event_btAddCancelActionPerformed

    private void btAddSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAddSaveActionPerformed

        addSavePressed();
    }//GEN-LAST:event_btAddSaveActionPerformed

    private void btAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAddActionPerformed
addPressed();
    }//GEN-LAST:event_btAddActionPerformed

    private void tblDBMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDBMouseClicked
click=true;
selrow=tblDB.getSelectedRow();                
    }//GEN-LAST:event_tblDBMouseClicked

    private void rdbtNDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdbtNDataActionPerformed

btInactivate.setEnabled(false);
btAdd.setEnabled(false);
btModify.setEnabled(false);
btActivate.setEnabled(true);

        displayData();       
    }//GEN-LAST:event_rdbtNDataActionPerformed

    private void rdbtYDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdbtYDataActionPerformed
        btActivate.setEnabled(false);
        btInactivate.setEnabled(true);
        btModify.setEnabled(true);
        btAdd.setEnabled(true);
        displayData();
    }//GEN-LAST:event_rdbtYDataActionPerformed

    private void rdbtAllDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdbtAllDataActionPerformed
         btInactivate.setEnabled(true);
        btActivate.setEnabled(true);
        btAdd.setEnabled(true);
         btModify.setEnabled(true);
         displayData();
    }//GEN-LAST:event_rdbtAllDataActionPerformed

    /** Exit the Application */
    private void exitForm(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_exitForm
    }//GEN-LAST:event_exitForm

    /**
    * @param args the command line arguments
    */
    /*public static void main(String args[]) {
                       new BankMaster301().show(); 
    }//*/


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btActivate;
    private javax.swing.JButton btAdd;
    private javax.swing.JButton btAddCancel;
    private javax.swing.JButton btAddSave;
    private javax.swing.JButton btAddSearch;
    private javax.swing.JButton btExit;
    private javax.swing.JButton btInactivate;
    private javax.swing.JButton btModify;
    private javax.swing.JButton btSearch;
    private javax.swing.ButtonGroup btngrpViewOptions;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblFormHeadingAM;
    private javax.swing.JLabel lblFormHeadingH;
    private javax.swing.JPanel pnlAddMod;
    private javax.swing.JPanel pnlHome;
    private javax.swing.JRadioButton rdbtAllData;
    private javax.swing.JRadioButton rdbtNData;
    private javax.swing.JRadioButton rdbtYData;
    private javax.swing.JTable tblDB;
    private javax.swing.JTextField txtCode;
    private javax.swing.JTextField txtName;
    // End of variables declaration//GEN-END:variables

    private void count(){
        try{
            rowTotal=0;cols=0;i=0;j=0;rowY=0;

accessDB();
String ss,ss1;
   ss="SELECT * FROM "+tableName;
   ResultSet res = stat.executeQuery(ss); 
      ResultSetMetaData md = res.getMetaData();
     /**   in the database , we have the counter field which is autonumber.
 *      we dont want to display it in the front end.
 */   

   cols = md.getColumnCount()-1;
   tableColHeads=new String[cols];
   for(i=1;i<=cols;i++)
       tableColHeads[i-1]=md.getColumnName(i+1);


   ss1=" SELECT COUNT(*) FROM "+tableName;
  ResultSet res1 =   stat.executeQuery(ss1); 

  
res1.next(); 
try{
    rowTotal=Integer.parseInt(res1.getString(1));
}//end try
catch(Exception e){
    System.out.println(e);
}//end catch

  con.close();

         }//end try
        catch (Exception e){
            System.out.println(e);
        }//end catch
    }//end count
    
    
    private void displayData(){
    
    try{
     
        count();
   
        tableRaw=new Object[rowTotal][cols];
accessDB( );
String ss1;
    ss1="SELECT * FROM "+tableName+" ORDER BY "+ tableColHeads[1];
    ResultSet res1 = stat.executeQuery(ss1);
  for(i=1;res1.next();i++)
      for(j=1;j<=cols;j++){
      tableRaw[i-1][j-1]=res1.getString(j+1);
            if(j==cols && "Y".equals(tableRaw[i-1][j-1]) )
          rowY+=1;
      }
   
   con.close();
   tableY=new Object[rowY][cols];
   
   tableN=new Object[rowTotal-rowY][cols];
   
   int i1=0,i2=0;
    for(i=0;i<rowTotal;i++){
      
      if( "Y".equals(tableRaw[i][cols-1]) ){
          
          for(j=0;j<cols;j++)
         tableY[i1][j]=tableRaw[i][j];
         
         i1++;
      }//end if 
      
      else {
          for(j=0;j<cols;j++)
         tableN[i2][j]=tableRaw[i][j];
         
         i2++;
           
      }//end else
      }//end for*/
   

       if( rdbtAllData.isSelected() ){  
 rowShown=rowTotal;
tableShown=new Object[rowShown][cols];
tableShown=tableRaw;
 }//end if
   
 else if(rdbtYData.isSelected() ){  
if(rowY>0){
     rowShown=rowY;
tableShown=new Object[rowShown][cols];
tableShown=tableY;
}//end if
else{
      JOptionPane.showMessageDialog(this," The Database contains no Active Data. ","Sorry!",JOptionPane.ERROR_MESSAGE);    
      rdbtAllData.requestFocus();
rdbtAllDataSelected();
      
}//end else
 }//end else if 1
   
 else if(rdbtNData.isSelected() ){  
if(rowTotal-rowY>0){     
     rowShown=rowTotal-rowY;
tableShown=new Object[rowShown][cols];
tableShown=tableN;
 }
else{
      JOptionPane.showMessageDialog(this," The Database contains no Inactive Data. ","Sorry!",JOptionPane.ERROR_MESSAGE);    
      rdbtAllData.requestFocus();
rdbtAllDataSelected();
      
}//end else
   
 }//end else if 1
final boolean cellUnEditable[] = {false,false,false};    

tblDB.setModel(new javax.swing.table.DefaultTableModel(tableShown,tableColHeadsShown){
public boolean isCellEditable(int rowIndex, int columnIndex) {
                return cellUnEditable [columnIndex];
            }
        });  
        
        
 //tblDB.setCellEditor(tblDB.cellEditor) ;
 //tblDB.setAlignmentX(tblDB.RIGHT_ALIGNMENT);       

        //DefaultTableModel(Object[][],String [])*/

/*{
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        }//*/


  h=tblDB.getRowHeight()*(rowShown+1); 
 if(h<240)
jScrollPane1.setSize(500,h+5);
   else
     jScrollPane1.setSize(500,240);  

  }//end try
    
    catch(Exception e){
        System.out.println(e);
    }//end exception
    
}//end displayData

    
   private void addData(){
int opt=JOptionPane.showConfirmDialog(this,"Are you sure you want to save these data?            ","You are about to add new data to the Database....",JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE);       

    if(opt==0){
    try{
        accessDB();
 initialise();
         ss="INSERT INTO  " + tableName + " (" +ss1+ ") VALUES "+" ("+ss2+")";
      System.out.println(ss);
    stat.executeUpdate(ss);  
    con.close();
    }//end try
    
    catch(Exception e){
        System.out.println(e);
    }//end exception
   
    updateCode();
    }//end if

            txtName.setText("");
            txtName.requestFocus();
            pnlHome.setVisible(true);
//Search.pnlSearch.setVisible(false);
pnlAddMod.setVisible(false);

    add=false; 

    
}//end addData

     private void modifyData(){
int opt=JOptionPane.showConfirmDialog(this,"Are you sure you want to modify these data?","You are about to modify the Database... ",JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE);       

    if(opt==0){
         
    try{
    
accessDB();
String ss1;
    
ss1="UPDATE "+tableName+ " SET "+ tableColHeads[1]+"  = '"+name+"'  WHERE "+tableColHeads[0]+" = '"+(String)(tableShown[selrow][0])+"' ";
System.out.println(ss1);
   stat.executeUpdate(ss1);
    con.close();
    
    }//end try
    
    catch(Exception e){
        System.out.println(e);
    }//end exception
    
    displayData();
    
    }//end if
            txtName.setText("");
            txtCode.setEditable(true);
            pnlAddMod.setVisible(false);    
            pnlHome.setVisible(true);  
    
}//end modifyData */
    
    
    
    

private void modifyActivate(String opt,int row){

    
    try{
    
accessDB();
    String ss1;
    
    ss1="UPDATE "+tableName+" SET Active  = '"+opt+"'  WHERE " +tableColHeads[0]+ "= '" + (String)(tableShown[row][0]) + "' ";
   
   stat.executeUpdate(ss1);
    con.close();
    
            btInactivate.setEnabled(true);
        btActivate.setEnabled(true);
        btAdd.setEnabled(true);
         btModify.setEnabled(true);
btSearch.setEnabled(true);

    rdbtAllData.setSelected(true);
    displayData();
    
    
    }//end try
    
    catch(Exception e){
        System.out.println(e);
    }//end exception
    

}//end modifyActivate


private int searchElement(String key,String[] a){
    int indx=-1;
    for(i=0;i<a.length;i++){
        if( key.equals(a[i]) )
            indx=i;
    }//end for
    
    
    return indx;
}//end searchElement
    
 public void  accessDB(){
     try{
    java.lang.Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
    
    con = java.sql.DriverManager.getConnection("jdbc:odbc:sha");
    
     stat = con.createStatement();
     }//end try
     catch(Exception e){
         System.out.println(e);
     }//end catch
   
     
 }//end accessDB
 
 private void initialise(){
     dbParam = new String[tableColHeads.length];
             ss1="";
             ss2="";
     
     //initialise dbParam with the variables that have the values to be entered in the database
     dbParam[0]="'"+code+"'";
     dbParam[1]="'"+name+"'";
     dbParam[2]="'Y'";
          for(i=0;i<tableColHeads.length;i++){
         ss1+=tableColHeads[i];
         ss2+=dbParam[i];
         if(i!=tableColHeads.length-1){
             ss1+=",";
             ss2+=",";
         }
         
              }//end for
     

 }//end initialise*/

     

private void addPressed(){
add=true;
pnlHome.setVisible(false);
pnlAddMod.setVisible(true);
}//end addPressed methd.
    
private void modifyPressed(){
if(  rowTotal==0   )
JOptionPane.showMessageDialog(this," The Database is currently empty.","Sorry!",JOptionPane.ERROR_MESSAGE); 
else if(  rowY==0 && rdbtYData.isSelected()  )
JOptionPane.showMessageDialog(this," The Database currently has no active data.","Sorry!",JOptionPane.ERROR_MESSAGE); 
else if(  rowTotal==rowY && rdbtNData.isSelected() )
JOptionPane.showMessageDialog(this," The Database currently contains no inactive data.","Sorry!",JOptionPane.ERROR_MESSAGE); 
else if(click && tableShown[selrow][2].equals("N"))
JOptionPane.showMessageDialog(this," Cannot modify Inactive data: Activate it first.","Sorry!",JOptionPane.ERROR_MESSAGE); 
else if( click ){
txtCode.setText((String)(tableShown[selrow][0]));
txtName.setText((String)(tableShown[selrow][1]));
txtName.selectAll();
pnlHome.setVisible(false);   
pnlAddMod.setVisible(true);
click=false;
      }//end if
else if(!click)
      JOptionPane.showMessageDialog(this," Select from the Table to modify the Database ","Sorry!",JOptionPane.ERROR_MESSAGE); 
     tblDB.clearSelection();   

}//end modifyPressed methd.

private void searchPressed(){ 

if(  rowTotal==0   )
JOptionPane.showMessageDialog(this," The Database is currently empty.","Sorry!",JOptionPane.ERROR_MESSAGE); 
else if(  rowY==0 && rdbtYData.isSelected()  )
JOptionPane.showMessageDialog(this," The Database currently has no active data.","Sorry!",JOptionPane.ERROR_MESSAGE); 
else if(  rowTotal==rowY && rdbtNData.isSelected() )
JOptionPane.showMessageDialog(this," The Database currently contains no inactive data.","Sorry!",JOptionPane.ERROR_MESSAGE); 
        else{        
            Search.setVisible(true);
            //Search.pnlSearch.setVisible(true);
pnlAddMod.setVisible(false);
//Search.cbSearch.setSelectedIndex(0); // index 0 corre3sponds to the 1st item of combo box
rdbtAllData.setEnabled(false);
rdbtYData.setEnabled(false);
rdbtNData.setEnabled(false);
btAdd.setEnabled(false);
btModify.setEnabled(false);
btSearch.setEnabled(false);
btActivate.setEnabled(false);
btInactivate.setEnabled(false);
btExit.setEnabled(false);
        }//end else
}//end searchPressed methd.

private void activatePressed(){
if(  rowTotal==0   )
JOptionPane.showMessageDialog(this," The Database is currently empty.","Sorry!",JOptionPane.ERROR_MESSAGE); 
else if(  rowY==0 && rdbtYData.isSelected()  )
JOptionPane.showMessageDialog(this," The Database currently has no active data.","Sorry!",JOptionPane.ERROR_MESSAGE); 
else if(  rowTotal==rowY && rdbtNData.isSelected() )
JOptionPane.showMessageDialog(this," The Database currently contains no inactive data.","Sorry!",JOptionPane.ERROR_MESSAGE); 
    
        else if(!click)
      JOptionPane.showMessageDialog(this," Select from the Table to modify the Database ","Sorry!",JOptionPane.ERROR_MESSAGE); 
        else if (click){
          tblDB.setRowSelectionAllowed(true);   
if(selrow>=0){
    if(activate){
        if(tableShown[selrow][2].equals("Y"))
JOptionPane.showMessageDialog(this," Selected item is already Active!","",JOptionPane.ERROR_MESSAGE); 
        else{//inner else  
int opt=JOptionPane.showConfirmDialog(this,"Are you sure you want to Activate the selected data?            ","You are about to Activate an Inactive data....",JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE);       

    if(opt==0)
        modifyActivate("Y",selrow);
        }//end inner else
    }//end if
    else{
        if(tableShown[selrow][2].equals("N"))
JOptionPane.showMessageDialog(this," Selected item is already Inactive!","",JOptionPane.ERROR_MESSAGE); 
        else {//inner else   
            int opt=JOptionPane.showConfirmDialog(this,"Are you sure you want to Inactivate the selected data?            ","You are about to Inactivate an Active data....",JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE);       

    if(opt==0)
modifyActivate("N",selrow);

        }//end inner else
    }//end else
          click=false;
}//end else if
      } 

}//end activePressed methd.

private void addSavePressed(){
        code=txtCode.getText().trim();
        name=txtName.getText().trim();
        duplicate=false;
        for(i=0;i<rowShown;i++)
            if( name.compareTo(tableShown[i][1].toString())==0 ){
                duplicate=true;
                break;
            }//end if
            
if(name.equals("")){
         JOptionPane.showMessageDialog(this," The Name-field is empty  ","Error!",JOptionPane.ERROR_MESSAGE);
                   txtName.setText("");
                   txtName.requestFocus();
          
   }//end if
else if(duplicate){
    JOptionPane.showMessageDialog(this," This name already exists: enter an unique name.","Error!",JOptionPane.ERROR_MESSAGE);
          txtName.setText("");
          txtName.requestFocus();
    
}//end else if
 else{
            if(add){
    addData();
             }
else
    modifyData();
            displayData();

        }//end else
}//end addSavePressed methd.


private void addCancelPressed(){

txtName.setText("");
add=false;
pnlAddMod.setVisible(false);
pnlHome.setVisible(true);
}//end addCancelPressed methd.

/*/private void searchCancelPressed(){
//Search.cbSearch.setSelectedItem("CODE");
//list.removeAllElements();
pnlHome.setVisible(true);
//Search.pnlSearch.setVisible(false);
//Search.setVisible(false);
pnlAddMod.setVisible(false);
rdbtAllData.setEnabled(true);
rdbtYData.setEnabled(true);
rdbtNData.setEnabled(true);
btExit.setEnabled(true);
btAdd.setEnabled(true);
btModify.setEnabled(true);
btSearch.setEnabled(true);
btActivate.setEnabled(true);
btInactivate.setEnabled(true);
Search.txtSearch.setText(""); 
    
}///*/

private void generateCode() {
    try{
        accessDB();
        String ss = "SELECT * FROM SemaPhores WHERE TableName = 'BankMaster'";
        ResultSet res = stat.executeQuery(ss);
        res.next();
        
        String s =""+ res.getString(3);
        System.out.println(s);
        ctr = Integer.parseInt(res.getString(4));
        if(s.equals("null"))
        txtCode.setText(""+ctr);
        else
        txtCode.setText(s+ctr);
        con.close();
    }//end try
    catch(Exception e){
        System.out.println(e+"\n1393");
    }//end catch
}

private void updateCode() {
    try{
        accessDB();
        ctr++;
        String ss1 = "UPDATE SemaPhores SET  MaxCtr = "+ctr+" WHERE TableName = 'BankMaster' ";
        stat.executeUpdate(ss1);
        
        con.close();
    }//end try
    catch(Exception e){
        System.out.println(e+"\n2753");
    }//end catch
}

//end searchCancelPressed

private void rdbtAllDataSelected(){
            rdbtAllData.setSelected(true);
                     btInactivate.setEnabled(true);
        btActivate.setEnabled(true);
        btAdd.setEnabled(true);
         btModify.setEnabled(true);

        displayData();    
}//end rdbtAllDataSelected()

private void rdbtYDataSelected(){
            rdbtYData.setSelected(true);
                    btActivate.setEnabled(false);
        btInactivate.setEnabled(true);
        btModify.setEnabled(true);
        btAdd.setEnabled(true);
        displayData();
    
}//end rdbtYDataSelected()

private void rdbtNDataSelected(){
            rdbtNData.setSelected(true);
                    btInactivate.setEnabled(false);
btAdd.setEnabled(false);
btModify.setEnabled(false);
btActivate.setEnabled(true);
        displayData();       
    
}//end rdbtNDataSelected()

Object tableShown[][],tableY[][],tableN[][],tableRaw[][];
String tableColHeads[],code=new String(),name=new String(),remarks,sorted[],unsorted[],key="";
int rowTotal=0,cols=0,i=0,j=0,selrow=0,rowY=0,rowShown=0,h=0,ctr=0,listClicked2=0;
boolean eleFound=false,tab=false,click=false,duplicate=false,listSelectionChanged=false;
StringBuffer sb;
//Vector list;
Statement stat;
Connection con;

String tableName="BankMaster",dbParam[],ss,ss1="",ss2="";    

String tableColHeadsShown[]={"Code","Name","Active"};    
boolean add=false,home=true,activate=false,controlKey=false;    


}//end main

