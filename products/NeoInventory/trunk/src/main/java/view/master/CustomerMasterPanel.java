/*
 * CustomerMaster.java
 *
 * Created on 31 October 2002, 09:56
 */

package view.master;
import java.sql.*;
import java.lang.*;
import javax.swing.JOptionPane;

import usefulClasses.databaseOperations.LinkDB;

import java.util.*;
/**
 *
 * @author  Shanmugam
 */
public class CustomerMasterPanel extends javax.swing.JPanel {

    /** Creates new form CustomerMaster */
    public CustomerMasterPanel() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        buttonGroup1 = new javax.swing.ButtonGroup();
        jPnlCMView = new javax.swing.JPanel();
        jBtnCMModify = new javax.swing.JButton();
        jBtnCMSearch = new javax.swing.JButton();
        jBtnCMActivate = new javax.swing.JButton();
        jBtnCMInActivate = new javax.swing.JButton();
        jBtnCMAdd = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTblDisplay = new javax.swing.JTable();
        jBtnCMExit = new javax.swing.JButton();
        jPnlCMViewOption = new javax.swing.JPanel();
        jRBtnCMComplete = new javax.swing.JRadioButton();
        jRBtnCMActive = new javax.swing.JRadioButton();
        jRBtnCMInActive = new javax.swing.JRadioButton();
        jPnlCMSearch = new javax.swing.JPanel();
        jCboCMSearch = new javax.swing.JComboBox();
        jTxtCMSearch = new javax.swing.JTextField();
        jSPaneCM = new javax.swing.JScrollPane();
        jListCMSearch = new javax.swing.JList();
        jBtnCMSearchClose = new javax.swing.JButton();
        jLblCMMain = new javax.swing.JLabel();
        jPnlCMAdd = new javax.swing.JPanel();
        jLblCMCode = new javax.swing.JLabel();
        jLblCMName = new javax.swing.JLabel();
        jTxtCMName = new javax.swing.JTextField();
        jTPCMAddress = new javax.swing.JTabbedPane();
        jPnlCMAddress = new javax.swing.JPanel();
        jLblCMStreet = new javax.swing.JLabel();
        jTxtCMStreet = new javax.swing.JTextField();
        jLblCMLocality = new javax.swing.JLabel();
        jTxtCMLocality = new javax.swing.JTextField();
        jLblCMCity = new javax.swing.JLabel();
        jLblCMPin = new javax.swing.JLabel();
        jTxtCMCity = new javax.swing.JTextField();
        jTxtCMPin = new javax.swing.JTextField();
        jLblCMEmail = new javax.swing.JLabel();
        jLblCMOPhone = new javax.swing.JLabel();
        jLblCMLicenseNo = new javax.swing.JLabel();
        jTxtCMLicenseNo = new javax.swing.JTextField();
        jLblCMRPhone = new javax.swing.JLabel();
        jTxtCMRPhone = new javax.swing.JTextField();
        jLblCMMobile = new javax.swing.JLabel();
        jTxtCMMobile = new javax.swing.JTextField();
        jLblCMFax = new javax.swing.JLabel();
        jTxtCMFax = new javax.swing.JTextField();
        jLblCMRating = new javax.swing.JLabel();
        jCboCMRating = new javax.swing.JComboBox();
        jBtnCMSave = new javax.swing.JButton();
        jTxtCMCode = new javax.swing.JTextField();
        jBtnCMCancel = new javax.swing.JButton();
        jTxtCMEmail = new javax.swing.JTextField();
        jTxtCMOPhone = new javax.swing.JTextField();
        jBtnCMAddSearch = new javax.swing.JButton();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                formComponentResized(evt);
            }
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });

        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
        });

        jPnlCMView.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPnlCMView.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                jPnlCMViewComponentResized(evt);
            }
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jPnlCMViewComponentShown(evt);
            }
        });

        jBtnCMModify.setMnemonic('M');
        jBtnCMModify.setText("Modify");
        jBtnCMModify.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnCMModifyActionPerformed(evt);
            }
        });

        jPnlCMView.add(jBtnCMModify, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 370, 100, -1));

        jBtnCMSearch.setMnemonic('S');
        jBtnCMSearch.setText("Search");
        jBtnCMSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnCMSearchActionPerformed(evt);
            }
        });

        jPnlCMView.add(jBtnCMSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 370, 100, -1));

        jBtnCMActivate.setMnemonic('c');
        jBtnCMActivate.setText("Activate");
        jBtnCMActivate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnCMActivateActionPerformed(evt);
            }
        });

        jPnlCMView.add(jBtnCMActivate, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 370, 100, -1));

        jBtnCMInActivate.setMnemonic('n');
        jBtnCMInActivate.setText("InActivate");
        jBtnCMInActivate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnCMInActivateActionPerformed(evt);
            }
        });

        jPnlCMView.add(jBtnCMInActivate, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 370, 100, -1));

        jBtnCMAdd.setMnemonic('A');
        jBtnCMAdd.setText("Add");
        jBtnCMAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnCMAddActionPerformed(evt);
            }
        });

        jPnlCMView.add(jBtnCMAdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 370, 100, -1));

        jScrollPane1.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        jScrollPane1.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                jScrollPane1ComponentResized(evt);
            }
        });

        jTblDisplay.setAlignmentX(1.0F);
        jTblDisplay.setAlignmentY(1.0F);
        jTblDisplay.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jTblDisplay.setPreferredScrollableViewportSize(new java.awt.Dimension(400, 400));
        jTblDisplay.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        jTblDisplay.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTblDisplayKeyPressed(evt);
            }
        });

        jTblDisplay.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTblDisplayMouseClicked(evt);
            }
        });

        jScrollPane1.setViewportView(jTblDisplay);

        jPnlCMView.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, 600, 290));

        jBtnCMExit.setMnemonic('x');
        jBtnCMExit.setText("Exit");
        jBtnCMExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnCMExitActionPerformed(evt);
            }
        });

        jPnlCMView.add(jBtnCMExit, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 370, 100, -1));

        jPnlCMViewOption.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPnlCMViewOption.setBorder(new javax.swing.border.TitledBorder(null, "View Options", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 0, 14)));
        jRBtnCMComplete.setFont(new java.awt.Font("Dialog", 2, 12));
        jRBtnCMComplete.setMnemonic('l');
        jRBtnCMComplete.setText("All Data");
        buttonGroup1.add(jRBtnCMComplete);
        jRBtnCMComplete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRBtnCMCompleteActionPerformed(evt);
            }
        });

        jPnlCMViewOption.add(jRBtnCMComplete, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 20, -1, -1));

        jRBtnCMActive.setFont(new java.awt.Font("Dialog", 2, 12));
        jRBtnCMActive.setMnemonic('t');
        jRBtnCMActive.setText("Active Data");
        buttonGroup1.add(jRBtnCMActive);
        jRBtnCMActive.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRBtnCMActiveActionPerformed(evt);
            }
        });

        jPnlCMViewOption.add(jRBtnCMActive, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 20, -1, -1));

        jRBtnCMInActive.setFont(new java.awt.Font("Dialog", 2, 12));
        jRBtnCMInActive.setMnemonic('i');
        jRBtnCMInActive.setText("In Active Data");
        buttonGroup1.add(jRBtnCMInActive);
        jRBtnCMInActive.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRBtnCMInActiveActionPerformed(evt);
            }
        });

        jPnlCMViewOption.add(jRBtnCMInActive, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 20, -1, -1));

        jPnlCMView.add(jPnlCMViewOption, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 600, 60));

        jPnlCMSearch.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPnlCMSearch.setBorder(new javax.swing.border.TitledBorder(null, "Search", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Dialog", 0, 14)));
        jPnlCMSearch.setVisible(false);
        jCboCMSearch.addItem("Customer Code");
        jCboCMSearch.addItem("Customer Name");
        jCboCMSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCboCMSearchActionPerformed(evt);
            }
        });

        jCboCMSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jCboCMSearchKeyReleased(evt);
            }
        });

        jPnlCMSearch.add(jCboCMSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, 140, 20));

        jTxtCMSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTxtCMSearchKeyPressed(evt);
            }
        });

        jPnlCMSearch.add(jTxtCMSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, 140, 20));

        jListCMSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jListCMSearchKeyReleased(evt);
            }
        });

        jListCMSearch.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jListCMSearchMouseClicked(evt);
            }
        });

        jSPaneCM.setViewportView(jListCMSearch);

        jPnlCMSearch.add(jSPaneCM, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, 140, 270));

//        jBtnCMSearchClose.setIcon(new javax.swing.ImageIcon("C:\\Program Files\\Microsoft Visual Studio\\Common\\Graphics\\Bitmaps\\TlBr_W95\\BACK.BMP"));
        jBtnCMSearchClose.setMnemonic('e');
        jBtnCMSearchClose.setText("Search Cancel");
        jBtnCMSearchClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnCMSearchCloseActionPerformed(evt);
            }
        });

        jPnlCMSearch.add(jBtnCMSearchClose, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 360, 140, -1));

        jPnlCMView.add(jPnlCMSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 10, 160, 390));

        add(jPnlCMView, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 100, 800, 430));

        jLblCMMain.setFont(new java.awt.Font("Trebuchet MS", 1, 24));
        jLblCMMain.setForeground(new java.awt.Color(0, 0, 153));
        jLblCMMain.setText("Customer Master");
        add(jLblCMMain, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 30, -1, -1));

        jPnlCMAdd.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPnlCMAdd.setVisible(false);
        jPnlCMAdd.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jPnlCMAddComponentShown(evt);
            }
        });

        jLblCMCode.setForeground(new java.awt.Color(0, 51, 51));
        jLblCMCode.setText("Code");
        jPnlCMAdd.add(jLblCMCode, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, -1, 20));

        jLblCMName.setForeground(new java.awt.Color(0, 51, 51));
        jLblCMName.setText("Name");
        jPnlCMAdd.add(jLblCMName, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, -1, 20));

        jTxtCMName.setBackground(new java.awt.Color(204, 255, 255));
        jPnlCMAdd.add(jTxtCMName, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 60, 320, 20));

        jTPCMAddress.setForeground(new java.awt.Color(0, 51, 51));
        jPnlCMAddress.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLblCMStreet.setFont(new java.awt.Font("Dialog", 3, 10));
        jLblCMStreet.setForeground(new java.awt.Color(0, 51, 51));
        jLblCMStreet.setText("Street");
        jPnlCMAddress.add(jLblCMStreet, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 40, 20));

        jTxtCMStreet.setBackground(new java.awt.Color(204, 255, 255));
        jPnlCMAddress.add(jTxtCMStreet, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 10, 310, 20));

        jLblCMLocality.setFont(new java.awt.Font("Dialog", 3, 10));
        jLblCMLocality.setForeground(new java.awt.Color(0, 51, 51));
        jLblCMLocality.setText("Locality");
        jPnlCMAddress.add(jLblCMLocality, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, -1, 20));

        jTxtCMLocality.setBackground(new java.awt.Color(204, 255, 255));
        jPnlCMAddress.add(jTxtCMLocality, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 40, 310, 20));

        jLblCMCity.setFont(new java.awt.Font("Dialog", 3, 10));
        jLblCMCity.setForeground(new java.awt.Color(0, 51, 51));
        jLblCMCity.setText("City");
        jPnlCMAddress.add(jLblCMCity, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, 30, 20));

        jLblCMPin.setFont(new java.awt.Font("Dialog", 3, 10));
        jLblCMPin.setForeground(new java.awt.Color(0, 51, 51));
        jLblCMPin.setText("Pin");
        jPnlCMAddress.add(jLblCMPin, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, -1, 20));

        jTxtCMCity.setBackground(new java.awt.Color(204, 255, 255));
        jPnlCMAddress.add(jTxtCMCity, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 70, 310, 20));

        jTxtCMPin.setBackground(new java.awt.Color(204, 255, 255));
        jPnlCMAddress.add(jTxtCMPin, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 100, 310, 20));

        jTPCMAddress.addTab("Address", jPnlCMAddress);

        jPnlCMAdd.add(jTPCMAddress, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 80, 410, 160));

        jLblCMEmail.setForeground(new java.awt.Color(0, 51, 51));
        jLblCMEmail.setText("Email ID");
        jPnlCMAdd.add(jLblCMEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 280, -1, 20));

        jLblCMOPhone.setForeground(new java.awt.Color(0, 51, 51));
        jLblCMOPhone.setText("Phone (O)");
        jPnlCMAdd.add(jLblCMOPhone, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 310, -1, 20));

        jLblCMLicenseNo.setForeground(new java.awt.Color(0, 51, 51));
        jLblCMLicenseNo.setText("LicenseNo");
        jPnlCMAdd.add(jLblCMLicenseNo, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 250, -1, 20));

        jTxtCMLicenseNo.setBackground(new java.awt.Color(204, 255, 255));
        jTxtCMLicenseNo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTxtCMLicenseNoFocusLost(evt);
            }
        });

        jPnlCMAdd.add(jTxtCMLicenseNo, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 250, 320, 20));

        jLblCMRPhone.setForeground(new java.awt.Color(0, 51, 51));
        jLblCMRPhone.setText("Phone (R)");
        jPnlCMAdd.add(jLblCMRPhone, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 340, -1, 20));

        jTxtCMRPhone.setBackground(new java.awt.Color(204, 255, 255));
        jTxtCMRPhone.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTxtCMRPhoneFocusLost(evt);
            }
        });

        jPnlCMAdd.add(jTxtCMRPhone, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 340, 130, 20));

        jLblCMMobile.setForeground(new java.awt.Color(0, 51, 51));
        jLblCMMobile.setText("Mobile");
        jPnlCMAdd.add(jLblCMMobile, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 340, -1, 20));

        jTxtCMMobile.setBackground(new java.awt.Color(204, 255, 255));
        jTxtCMMobile.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTxtCMMobileFocusLost(evt);
            }
        });

        jPnlCMAdd.add(jTxtCMMobile, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 340, 140, 20));

        jLblCMFax.setForeground(new java.awt.Color(0, 51, 51));
        jLblCMFax.setText("Fax");
        jPnlCMAdd.add(jLblCMFax, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 370, -1, 20));

        jTxtCMFax.setBackground(new java.awt.Color(204, 255, 255));
        jTxtCMFax.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTxtCMFaxFocusLost(evt);
            }
        });

        jPnlCMAdd.add(jTxtCMFax, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 370, 130, 20));

        jLblCMRating.setForeground(new java.awt.Color(0, 51, 51));
        jLblCMRating.setText("Rating");
        jPnlCMAdd.add(jLblCMRating, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 370, -1, 20));

        jCboCMRating.addItem("A+");
        jCboCMRating.addItem("B+");
        jCboCMRating.addItem("C+");
        jCboCMRating.addItem("A-");
        jCboCMRating.addItem("B-");
        jCboCMRating.addItem("C-");

        jPnlCMAdd.add(jCboCMRating, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 370, 140, 20));

        jBtnCMSave.setMnemonic('s');
        jBtnCMSave.setText("Save");
        jBtnCMSave.setToolTipText(" ");
        jBtnCMSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnCMSaveActionPerformed(evt);
            }
        });

        jPnlCMAdd.add(jBtnCMSave, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 430, 100, -1));

        jTxtCMCode.setBackground(new java.awt.Color(204, 255, 255));
        jTxtCMCode.setEditable(false);
        jPnlCMAdd.add(jTxtCMCode, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 30, 320, 20));

        jBtnCMCancel.setMnemonic('c');
        jBtnCMCancel.setText("Cancel");
        jBtnCMCancel.setToolTipText(" ");
        jBtnCMCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnCMCancelActionPerformed(evt);
            }
        });

        jPnlCMAdd.add(jBtnCMCancel, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 430, 100, -1));

        jTxtCMEmail.setBackground(new java.awt.Color(204, 255, 255));
        jTxtCMEmail.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTxtCMEmailFocusLost(evt);
            }
        });

        jPnlCMAdd.add(jTxtCMEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 280, 320, 20));

        jTxtCMOPhone.setBackground(new java.awt.Color(204, 255, 255));
        jTxtCMOPhone.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTxtCMOPhoneFocusLost(evt);
            }
        });

        jPnlCMAdd.add(jTxtCMOPhone, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 310, 320, 20));

        jBtnCMAddSearch.setMnemonic('e');
        jBtnCMAddSearch.setText("Search");
        jBtnCMAddSearch.setToolTipText(" ");
        jBtnCMAddSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnCMAddSearchActionPerformed(evt);
            }
        });

        jPnlCMAdd.add(jBtnCMAddSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 430, 100, -1));

        add(jPnlCMAdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 80, 440, 500));

    }//GEN-END:initComponents

    private void formComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentResized
        // Add your handling code here:
    }//GEN-LAST:event_formComponentResized

    private void jTblDisplayMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTblDisplayMouseClicked
        // Add your handling code here:
        clickH=true;
        selrow=jTblDisplay.getSelectedRow();
    }//GEN-LAST:event_jTblDisplayMouseClicked

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
        // Add your handling code here:
         if(evt.getKeyCode()==evt.VK_ALT)
          jBtnCMSearchClose.requestFocus();
    }//GEN-LAST:event_formKeyPressed

    private void jPnlCMViewComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPnlCMViewComponentResized
        // Add your handling code here:
        displayData("CustMaster","CustName");
    }//GEN-LAST:event_jPnlCMViewComponentResized

    private void jBtnCMAddSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnCMAddSearchActionPerformed
        // Add your handling code here:
        jRBtnCMComplete.setSelected(true);
        jBtnCMActivate.setEnabled(true);        
        searchPressed();
    }//GEN-LAST:event_jBtnCMAddSearchActionPerformed

    private void jPnlCMViewComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPnlCMViewComponentShown
        // Add your handling code here:
        displayData("CustMaster","CustName"); 
        if(RowCount>=1){
         jTblDisplay.clearSelection(); 
             jCboCMSearch.setSelectedIndex(0);
             int index=searchElement(  (String)( jListCMSearch.getSelectedValue() )  ,unsorted   );
             jTblDisplay.changeSelection( index ,0,true,false);
        }
    }//GEN-LAST:event_jPnlCMViewComponentShown

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        // Add your handling code here:
       displayData("CustMaster","CustName");        
    }//GEN-LAST:event_formComponentShown

    private void jTxtCMFaxFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTxtCMFaxFocusLost
        // Add your handling code here:
        uniqueEntry("Fax","CustMaster",jTxtCMFax.getText(),jTxtCMFax);
    }//GEN-LAST:event_jTxtCMFaxFocusLost

    private void jTxtCMMobileFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTxtCMMobileFocusLost
        // Add your handling code here:
        uniqueEntry("Mobile","CustMaster",jTxtCMMobile.getText(),jTxtCMMobile);
    }//GEN-LAST:event_jTxtCMMobileFocusLost

    private void jTxtCMRPhoneFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTxtCMRPhoneFocusLost
        // Add your handling code here:
        uniqueEntry("Rphone","CustMaster",jTxtCMRPhone.getText(),jTxtCMRPhone);
    }//GEN-LAST:event_jTxtCMRPhoneFocusLost

    private void jTxtCMOPhoneFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTxtCMOPhoneFocusLost
        // Add your handling code here:
        uniqueEntry("OPhone","CustMaster",jTxtCMOPhone.getText(),jTxtCMOPhone);
    }//GEN-LAST:event_jTxtCMOPhoneFocusLost

    private void jTxtCMEmailFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTxtCMEmailFocusLost
        // Add your handling code here:
        uniqueEntry("Email","CustMaster",jTxtCMEmail.getText(),jTxtCMEmail);
    }//GEN-LAST:event_jTxtCMEmailFocusLost

    private void jTxtCMLicenseNoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTxtCMLicenseNoFocusLost
        // Add your handling code here:
        uniqueEntry("LicenseNo","CustMaster",jTxtCMLicenseNo.getText(),jTxtCMLicenseNo);
    }//GEN-LAST:event_jTxtCMLicenseNoFocusLost

    private void jScrollPane1ComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jScrollPane1ComponentResized
        // Add your handling code here:
         h=jTblDisplay.getRowHeight()*(RowCount+1);
            if(h<290)
                jScrollPane1.setSize(600,h+20);
            else
                jScrollPane1.setSize(600,290);
    }//GEN-LAST:event_jScrollPane1ComponentResized

    private void jPnlCMAddComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPnlCMAddComponentShown
        // Add your handling code here:
       // jPnlCMAdd.setLocation(90,70);
    }//GEN-LAST:event_jPnlCMAddComponentShown

    private void jRBtnCMInActiveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRBtnCMInActiveActionPerformed
        // Add your handling code here:
        displayData("CustMaster","Active","N","CustName");
        jBtnCMAdd.setEnabled(false);
        jBtnCMModify.setEnabled(false);
        jBtnCMSearch.setEnabled(true);
        jBtnCMActivate.setEnabled(true);
        jBtnCMInActivate.setEnabled(false);
    }//GEN-LAST:event_jRBtnCMInActiveActionPerformed

    private void jRBtnCMActiveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRBtnCMActiveActionPerformed
        // Add your handling code here:
        displayData("CustMaster","Active","Y","CustName");
        jBtnCMAdd.setEnabled(true);
        jBtnCMModify.setEnabled(true);
        jBtnCMSearch.setEnabled(true);
        jBtnCMActivate.setEnabled(false);
        jBtnCMInActivate.setEnabled(true);
    }//GEN-LAST:event_jRBtnCMActiveActionPerformed

    private void jRBtnCMCompleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRBtnCMCompleteActionPerformed
        // Add your handling code here:
        displayData("CustMaster","CustMaster.CustName");
        jBtnCMAdd.setEnabled(true);
        jBtnCMModify.setEnabled(true);
        jBtnCMSearch.setEnabled(true);
        jBtnCMActivate.setEnabled(true);
        jBtnCMInActivate.setEnabled(true);
    }//GEN-LAST:event_jRBtnCMCompleteActionPerformed

    private void jCboCMSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jCboCMSearchKeyReleased
        // Add your handling code here:
        int KeyCode=evt.getKeyCode();
        if(KeyCode==evt.VK_UP||KeyCode==evt.VK_DOWN)
            jTxtCMSearch.requestFocus();
        else if(KeyCode==evt.VK_ENTER)
             jTxtCMSearch.requestFocus();
        
        jTxtCMSearch.enable();
        jTxtCMSearch.requestFocus(); 
        key="";
        jTxtCMSearch.setText("");
        if (jRBtnCMInActive.isSelected()) 
           jBtnCMModify.setEnabled(false);
        else
           jBtnCMModify.setEnabled(true);
        
        search(jListCMSearch);
    }//GEN-LAST:event_jCboCMSearchKeyReleased

    private void jListCMSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jListCMSearchKeyReleased
        // Add your handling code here:
        int KeyCode=evt.getKeyCode();
        if(KeyCode==evt.VK_UP||KeyCode==evt.VK_DOWN){
            jTblDisplay.clearSelection();      
             int index=searchElement(  (String)( jListCMSearch.getSelectedValue() )  ,unsorted   );
             jTblDisplay.changeSelection( index ,0,true,false);
             jTxtCMSearch.setText(""+ jListCMSearch.getSelectedValue());
             jTxtCMSearch.selectAll();
        }
        else if(KeyCode==evt.VK_ENTER){
            if (jRBtnCMInActive.isSelected()) 
                jBtnCMModify.setEnabled(false);
           else{
                int index=searchElement(  (String)( jListCMSearch.getSelectedValue() )  ,unsorted   );               
                selrow=index;                
                modify();                
           }
        }
                 
       if (jRBtnCMInActive.isSelected()) 
           jBtnCMModify.setEnabled(false);
       else
           jBtnCMModify.setEnabled(true);
                
    }//GEN-LAST:event_jListCMSearchKeyReleased

    private void jBtnCMExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnCMExitActionPerformed
        // Add your handling code here:
 this.setVisible(false);
    }//GEN-LAST:event_jBtnCMExitActionPerformed

    private void jTblDisplayKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTblDisplayKeyPressed
        // Add your handling code here:
        int KeyCode=evt.getKeyCode();
        if (KeyCode==evt.VK_TAB){
            if(jPnlCMSearch.isVisible())
                jCboCMSearch.requestFocus();
            else
                jBtnCMAdd.requestFocus();
        }
    }//GEN-LAST:event_jTblDisplayKeyPressed

    private void jTxtCMSearchKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTxtCMSearchKeyPressed
        // Add your handling code here:
        char KeyChar=evt.getKeyChar();
        int KeyCode=evt.getKeyCode();
        if(KeyCode==evt.VK_BACK_SPACE||KeyCode==evt.VK_DELETE){
            sb=new StringBuffer(key);
            if (sb.length()>0){
            sb.setLength(sb.length()-1);
            }
            key=sb.toString();
        }
        else if(KeyCode==evt.VK_ALT || KeyCode==evt.VK_CONTROL || KeyCode==evt.VK_SHIFT){ 
            ;
        } 
        else if(KeyCode==evt.VK_UP || KeyCode==evt.VK_DOWN){
               if (jRBtnCMInActive.isSelected()) 
                  jBtnCMModify.setEnabled(false);
               else
                   jBtnCMModify.setEnabled(true);
        }
        else if(KeyCode==evt.VK_TAB){
              jListCMSearch.requestFocus();
              jListCMSearch.setSelectedIndex(0);
        }
        else if(KeyCode==evt.VK_ENTER){   
            if (jRBtnCMInActive.isSelected()){ 
                   jBtnCMModify.setEnabled(false);
                   jCboCMSearch.requestFocus();                
            }
            else if(jTxtCMSearch.getText().equals(""))
                ;
            else{
                 int index=searchElement(  (String)( jListCMSearch.getSelectedValue() )  ,unsorted   );                                    
                 selrow=index;                 
                 modify();               
            }  
        }
        else if(KeyCode>=33 && KeyCode<=126){
            key+=String.valueOf(KeyChar);
            key=key.trim();
        }
        else
           JOptionPane.showMessageDialog(this,"Enter Suitable value","Error",JOptionPane.INFORMATION_MESSAGE); 
            
        if (jRBtnCMInActive.isSelected()) 
           jBtnCMModify.setEnabled(false);
        else
           jBtnCMModify.setEnabled(false);
            
        search(jListCMSearch);        
    }//GEN-LAST:event_jTxtCMSearchKeyPressed

    private void jBtnCMInActivateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnCMInActivateActionPerformed
        // Add your handling code here:
       if (jTblDisplay.getSelectedColumn()!=-1){  
        activate("N","CustMaster","CustMaster.CustName"); 
        jRBtnCMComplete.setSelected(true);
        jBtnCMAdd.setEnabled(true);
        jBtnCMModify.setEnabled(true);
        jBtnCMSearch.setEnabled(true);
        jBtnCMInActivate.setEnabled(true);
        jPnlCMSearch.setVisible(false);
        jRBtnCMComplete.setEnabled(true);
        jRBtnCMActive.setEnabled(true);
        jRBtnCMInActive.setEnabled(true);
       }
       else
           JOptionPane.showMessageDialog(this,"Select any row in the grid","Information",JOptionPane.INFORMATION_MESSAGE);
  
    }//GEN-LAST:event_jBtnCMInActivateActionPerformed

    private void jBtnCMActivateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnCMActivateActionPerformed
        // Add your handling code here:
         if (jTblDisplay.getSelectedColumn()!= -1){ 
            activate("Y","CustMaster","CustMaster.CustName");
            jRBtnCMComplete.setSelected(true);
            jBtnCMAdd.setEnabled(true);
            jBtnCMModify.setEnabled(true);
            jBtnCMSearch.setEnabled(true);
            jBtnCMInActivate.setEnabled(true);
            jPnlCMSearch.setVisible(false);
            jRBtnCMComplete.setEnabled(true);
            jRBtnCMActive.setEnabled(true);
            jRBtnCMInActive.setEnabled(true);
       }
       else
           JOptionPane.showMessageDialog(this,"Select any row in the grid","Information",JOptionPane.INFORMATION_MESSAGE);
        
    }//GEN-LAST:event_jBtnCMActivateActionPerformed

    private void jBtnCMCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnCMCancelActionPerformed
        // Add your handling code here:
        if(RowCount>=1){
            jCboCMSearch.setSelectedIndex(0);
        }
        jPnlCMView.setVisible(true);        
        jPnlCMSearch.setVisible(false);
        jPnlCMAdd.setVisible(false);
        jTblDisplay.requestFocus();
        jBtnCMModify.setEnabled(true);
        jBtnCMSearch.setEnabled(true);
        jRBtnCMComplete.setEnabled(true);
        jRBtnCMActive.setEnabled(true);
        jRBtnCMInActive.setEnabled(true);
        jBtnCMActivate.setEnabled(true);
        jRBtnCMComplete.setSelected(true);
    }//GEN-LAST:event_jBtnCMCancelActionPerformed

    private void jListCMSearchMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jListCMSearchMouseClicked
        // Add your handling code here:
       int keyCode=evt.getClickCount();
           if(keyCode==1){
             jTblDisplay.clearSelection();      
             int index=searchElement(  (String)( jListCMSearch.getSelectedValue() )  ,unsorted   );
             jTblDisplay.changeSelection( index ,0,true,false);
             jTxtCMSearch.setText(""+jListCMSearch.getSelectedValue());
             jTxtCMSearch.selectAll();
           }
           else{
             jTblDisplay.clearSelection();      
             int index=searchElement(  (String)( jListCMSearch.getSelectedValue() )  ,unsorted   );
             jTblDisplay.changeSelection( index ,0,true,false);
             selrow=jTblDisplay.getSelectedRow();             
             modify();            
           }        
    }//GEN-LAST:event_jListCMSearchMouseClicked

    private void jCboCMSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCboCMSearchActionPerformed
        // Add your handling code here:            
        jTxtCMSearch.enable();
        jTxtCMSearch.requestFocus(); 
        key="";        
             search(jListCMSearch);
            if(RowCount>=1 ){
             jTblDisplay.clearSelection();      
             int index=searchElement(  (String)( jListCMSearch.getSelectedValue() )  ,unsorted   );
             jTblDisplay.changeSelection( index ,0,true,false);
             jTxtCMSearch.setText(""+jListCMSearch.getSelectedValue());
             jTxtCMSearch.selectAll();
            }
        if (jRBtnCMInActive.isSelected())
            jBtnCMModify.setEnabled(false);
        else
            jBtnCMModify.setEnabled(true);        
    }//GEN-LAST:event_jCboCMSearchActionPerformed

    private void jBtnCMSearchCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnCMSearchCloseActionPerformed
        // Add your handling code here:
                jPnlCMSearch.setVisible(false);
                jTblDisplay.requestFocus();
                jCboCMSearch.setSelectedIndex(0);
                jBtnCMSearch.setEnabled(true);            
                jRBtnCMComplete.setEnabled(true);
                jRBtnCMActive.setEnabled(true);
                jRBtnCMInActive.setEnabled(true);
             if (jRBtnCMInActive.isSelected())
                 jBtnCMModify.setEnabled(false);
             else
                 jBtnCMModify.setEnabled(true);
    }//GEN-LAST:event_jBtnCMSearchCloseActionPerformed

    private void jBtnCMSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnCMSearchActionPerformed
        // Add your handling code here:
            searchPressed();
    }//GEN-LAST:event_jBtnCMSearchActionPerformed

    private void jBtnCMModifyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnCMModifyActionPerformed
        // Add your handling code here:
        if(jTblDisplay.getSelectedColumn()!=-1){
            modify();   
            jBtnCMAddSearch.setVisible(true);
        }
        else
           JOptionPane.showMessageDialog(this,"Select any row in the grid","Information",JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_jBtnCMModifyActionPerformed

    private void jBtnCMSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnCMSaveActionPerformed
        // Add your handling code here:         
          accessDB();
          componentNull();
     if (getError.equals("NoError"))
     {      
        if (ModFlag==false) 
        {   
           int ansSave=JOptionPane.showConfirmDialog(this,"       Are u confirm to save","Save",JOptionPane.YES_NO_OPTION);
           if (ansSave==0){
               newSaveDB();
               if(NoNewSaveError)
                  updateCode("CustMaster");
               clearText();
               jTblDisplay.requestFocus();
           }
           else{
             clearText();
             jTblDisplay.requestFocus();
           }
         }
         else 
         {
           int ansModify=JOptionPane.showConfirmDialog(this,"      Are u confirm to Modify","Save",JOptionPane.YES_NO_OPTION);
           if (ansModify==0){   
                 modifySaveDB();
                 clearText();
                 jTblDisplay.requestFocus();
           }
            else{
                 clearText();
                 jTblDisplay.requestFocus();
           }
         }
        
            jPnlCMView.setVisible(true);
            jPnlCMAdd.setVisible(false);           
            jPnlCMSearch.setVisible(false);
          
            if (jRBtnCMComplete.isSelected())
               displayData("CustMaster","CustMaster.CustName");
            else if (jRBtnCMActive.isSelected())
              displayData("CustMaster","Active","Y","CustMaster.CustName");
            else if (jRBtnCMActive.isSelected())
              displayData("CustMaster","Active","N","CustMaster.CustName");
            
            jBtnCMModify.setEnabled(true);
            jCboCMSearch.setSelectedIndex(0);
            jBtnCMSearch.setEnabled(true);
            jTblDisplay.requestFocus();
            jRBtnCMComplete.setEnabled(true);
            jRBtnCMActive.setEnabled(true);
            jRBtnCMInActive.setEnabled(true);
     }
     else
     {
        System.out.println("Error");
     }
    }//GEN-LAST:event_jBtnCMSaveActionPerformed

    private void jBtnCMAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnCMAddActionPerformed
        // Add your handling code here:
        ModFlag=false;
        clearText();           
        jPnlCMView.setVisible(false);
        jPnlCMAdd.setVisible(true); 
        jBtnCMAddSearch.setVisible(false);
        jTxtCMName.requestFocus(); 
        generateCode("CustMaster",jTxtCMCode);        
    }//GEN-LAST:event_jBtnCMAddActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // Add your handling code here:
         jPnlCMAdd.setVisible(false);
         jPnlCMSearch.setVisible(false);
         jPnlCMView.setVisible(true);
         jBtnCMAdd.requestFocus();
         jRBtnCMComplete.setSelected(true); 
         try{
                accessDB();
                String ss = "SELECT * FROM SemaPhores WHERE TableName = 'CustMaster'";
                ResultSet res = stat.executeQuery(ss);
                if(!res.next()){
                    String ss1="Insert into SemaPhores (TableName,CtrName,MaxCtr) values('CustMaster','CM_',1)";
                   stat.executeUpdate(ss1);               
                }
                con.close();
           }
           catch(Exception ex){
               System.out.println("Error in form window opened "+ex);
           }
    }//GEN-LAST:event_formWindowOpened

    /** Exit the Application */
    private void exitForm(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_exitForm
    }//GEN-LAST:event_exitForm

    
    /** Disable all the Control or Components in the form */
    public void lockControl(){
       // jCboCode.setEditable(false);jCboGroupId.setEditable(false);
        jTxtCMCode.disable(); jTxtCMName.disable(); jTxtCMStreet.disable(); jTxtCMLocality.disable();
        jTxtCMCity.disable(); jTxtCMPin.disable(); jTxtCMLicenseNo.disable();
        jTxtCMOPhone.disable(); jTxtCMRPhone.disable();jTxtCMFax.disable();jCboCMRating.disable();
        jTxtCMEmail.disable(); jTxtCMMobile.disable();
    }
    
    /** Enables all the control or components in the form */    
    public void openLock(){
        //jCboCode.setEditable(true);jCboGroupId.setEditable(true);
         jTxtCMCode.enable(); jTxtCMName.enable(); jTxtCMStreet.enable(); jTxtCMLocality.enable();
        jTxtCMCity.enable(); jTxtCMPin.enable(); jTxtCMLicenseNo.enable();
        jTxtCMOPhone.enable(); jTxtCMRPhone.enable();jTxtCMFax.enable();jCboCMRating.enable();
        jTxtCMEmail.enable(); jTxtCMMobile.enable();
    }
    
    /** set the Component fields to null*/
    public void clearText(){
        jTxtCMCode.setText("") ; jTxtCMEmail.setText(""); jCboCMRating.setSelectedItem("");       
        jTxtCMName.setText(""); jTxtCMStreet.setText(""); jTxtCMLocality.setText("");
        jTxtCMCity.setText(""); jTxtCMPin.setText(""); jTxtCMLicenseNo.setText("");
        jTxtCMOPhone.setText(""); jTxtCMRPhone.setText("");jTxtCMFax.setText("");
        jTxtCMMobile.setText("");
    }
    
    /** Establish the Connection to the database */
    public void accessDB(){
       try
       { 
    	   con=new LinkDB().getConnection();
        stat=con.createStatement();
       }
       catch(Exception ex)
       {
           System.out.println("Error in accessDB "+ex);
       }   
    }
    
    /** Save new record to the Database */
    public void newSaveDB(){
         try{
              String ins;
              ins="Insert into CustMaster (CustCode,CustName,Street,Locality,City,";
              ins+="pin,LicenseNo,Email,OPhone,Rphone,Mobile,Fax,Rating,Active)";
              ins+=" values('"+jTxtCMCode.getText()+"','"+jTxtCMName.getText()+"'";
              ins+=",'"+jTxtCMStreet.getText()+"','"+jTxtCMLocality.getText()+"'";
              ins+=",'"+jTxtCMCity.getText()+"','"+jTxtCMPin.getText()+"','"+jTxtCMLicenseNo.getText()+"'";
              ins+=",'"+jTxtCMEmail.getText()+"','"+jTxtCMOPhone.getText()+"'";
              ins+=",'"+jTxtCMRPhone.getText()+"','"+jTxtCMMobile.getText()+"','"+jTxtCMFax.getText()+"'";
              ins+=",'"+jCboCMRating.getSelectedItem()+"','Y')";
              stat.executeUpdate(ins);   
              NoNewSaveError=true;
              con.close();
            }
            catch(Exception ex)
            {
                NoNewSaveError=false;
                System.out.println("Error in newSaveDB "+ex);
            }   
    }
    
    /** Save Modified record to the Database */
    public void modifySaveDB(){
        try{
                
                String upd;
                upd="Update CustMaster set CustName='"+jTxtCMName.getText()+"',Street='"+jTxtCMStreet.getText()+"'";
                upd+=",Locality='"+jTxtCMLocality.getText()+"',City='"+jTxtCMCity.getText()+"'";
                upd+=",Pin='"+jTxtCMPin.getText()+"',LicenseNo='"+jTxtCMLicenseNo.getText()+"'";
                upd+=",Email='"+jTxtCMEmail.getText()+"',OPhone='"+jTxtCMOPhone.getText()+"'";
                upd+=",RPhone='"+jTxtCMRPhone.getText()+"',Mobile='"+jTxtCMMobile.getText()+"'";
                upd+=",Fax='"+jTxtCMFax.getText()+"',Rating='"+jCboCMRating.getSelectedItem()+"'";
                upd+=" where CustCode='"+jTxtCMCode.getText()+"'";
                stat.executeUpdate(upd);                
                con.close();
            }
            catch(Exception ex)
            {
                System.out.println("Error in modifySaveDB "+ex);
            }
    }
   
  
    /** To record the count of the Column in the Jtable */ 
    public void columnCount(ResultSet r){
       accessDB();
       
       try{
           ResultSetMetaData rMeta=r.getMetaData();
           ColCount=rMeta.getColumnCount();
       }
       catch(Exception ex){
           System.out.println("Error in ColumnCount "+ex);
       }
              
   }
    
     /** To record the count of the Row in the Jtable */
   public void rowCount(String TableName){
       try{
           sel="Select * from "+TableName;         
           ResultSet res=stat.executeQuery(sel);
           RowCount=0;
           
          while (res.next())
               RowCount+=1;
       }
       catch(Exception ex)
       {
           System.out.println("Error in rowCount 1 "+ex);
       }
   }
   
    /** To have the count of row in the Jtable */
     public void rowCount(String TableName,String Condition,String Active){
       try{
           sel="Select Count(*) from "+TableName+" where "+Condition+"='"+Active+"'";
          
           ResultSet res=stat.executeQuery(sel);
           RowCount=0;           
           res.next();
               RowCount=Integer.parseInt(res.getString(1));
       }
       catch(Exception ex)
       {
           System.out.println("Error in rowCount 2"+ex);
       }
    }
     
     /** To Automatic generate next code after click of Add Button */
     private void generateCode(String TableName,javax.swing.JTextField jTxtCode){
     try{
         accessDB();
         String ss = "SELECT * FROM SemaPhores WHERE TableName = '"+TableName+"'";
         ResultSet res = stat.executeQuery(ss);
         res.next();
         ctr = Integer.parseInt(res.getString(4));
         if(ctr < 10)
            jTxtCode.setText(res.getString(3)+"00"+ctr);  
         else if(ctr >= 10 && ctr < 100)
            jTxtCode.setText(res.getString(3)+"0"+ctr); 
         else if(ctr >= 100 && ctr < 1000)
            jTxtCode.setText(res.getString(3)+""+ctr);    
         con.close();
     }
     catch(Exception e){
         System.out.println("Error in generateCode"+e+"\n1043");
     }
   }
 
   /** To update the counter in the table SemaPhores after of Save Button*/ 
   private void updateCode(String TableName){
      try{
          accessDB();
          ctr++;
          String ss1 = "UPDATE SemaPhores SET  MaxCtr = "+ctr+" WHERE TableName ='"+TableName+"'";
          stat.executeUpdate(ss1);          
          con.close();
      } 
      catch(Exception e){
         System.out.println("Error in updateCode"+e+"\n1057");
      }
    }
     
     /** To Initialize the tableModel called in displayData*/
     public void getModel(){
        jTblDisplay.setModel(new javax.swing.table.DefaultTableModel(tableData,new String [] {"Code","Name","Street","Locality","City","Pin","LicenseNO","Email","Phone(Off)","Phone(Res)","Mobile","Fax","Rating","Activate"})
       {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        h=jTblDisplay.getRowHeight()*(RowCount+1);
            if(h<288)
                jScrollPane1.setSize(600,h+18);
            else
                jScrollPane1.setSize(600,290);
    }
    
      /** To Display the Data in the Jtable */
    public void displayData(String TableName,String OrderBy){       
       try{
           accessDB();
           sel="Select * from "+TableName+" ORDER BY "+OrderBy ;
           ResultSet res=stat.executeQuery(sel);
           RowCount=0;
           columnCount(res);
           rowCount(TableName);     
           tableData=new Object [RowCount][ColCount-1];
                   
          for(int row=1;res.next();row++)
          {
              for(int col=1;col<=ColCount-1;col++)
              {                
                  tableData [row-1][col-1]=res.getString(col+1);      
              }
          }      
           con.close();
      }
      catch(Exception ex){
           System.out.println("Error in displayData 1"+ex);
       }
       getModel();
   }
    
    /** To Display the data from the Database to the Jtable */
    public void displayData(String TableName,String Condition,String Active,String OrderBy){
        try{
            accessDB();
           sel="Select * from "+TableName+" where "+Condition+"='"+Active+"' ORDER BY "+OrderBy;
           RowCount=0;
           ResultSet res=stat.executeQuery(sel);
           columnCount(res);
           rowCount(TableName,Condition,Active);     
           tableData=new Object [RowCount][ColCount-1];
                   
          for(int row=1;res.next();row++)
          {
              for(int col=1;col<=ColCount-1;col++)
              {                 
                  tableData [row-1][col-1]=res.getString(col+1);                
              }
          }      
           con.close();
      }
      catch(Exception ex){
           System.out.println("Error in displayData 2 "+ex);
       }
       getModel();
    }
    
    /** Null Check Method of all the fields after click of Save Button */
    public void componentNull(){
        if (jTxtCMCode.getText().equals("")){
            JOptionPane.showMessageDialog(this,"Code field should not be Null","Field Null",JOptionPane.INFORMATION_MESSAGE);
            getError="Error";
            jTxtCMCode.requestFocus();
        }  
        else if (jTxtCMName.getText().equals("")){
            JOptionPane.showMessageDialog(this,"Name field should not be Null","Field Null",JOptionPane.INFORMATION_MESSAGE);
            getError="Error";
            jTxtCMName.requestFocus();
        }  
        else if (jTxtCMStreet.getText().equals("")){
            JOptionPane.showMessageDialog(this,"Street field should not be Null","Field Null",JOptionPane.INFORMATION_MESSAGE);
            getError="Error";
            jTxtCMStreet.requestFocus();
        }  
        else if (jTxtCMLocality.getText().equals("")){
            JOptionPane.showMessageDialog(this,"Locality field should not be Null","Field Null",JOptionPane.INFORMATION_MESSAGE);
            getError="Error";
            jTxtCMLocality.requestFocus();
        }  
        else if (jTxtCMCity.getText().equals("")){
            JOptionPane.showMessageDialog(this,"City field should not be Null","Field Null",JOptionPane.INFORMATION_MESSAGE);
            getError="Error";
            jTxtCMCity.requestFocus();
        }  
        else if (jTxtCMPin.getText().equals("")){
            JOptionPane.showMessageDialog(this,"Pin field should not be Null","Field Null",JOptionPane.INFORMATION_MESSAGE);
            getError="Error";
            jTxtCMPin.requestFocus();
        }  
        else if (jTxtCMLicenseNo.getText().equals("")){
            JOptionPane.showMessageDialog(this,"LicenseNo field should not be Null","Field Null",JOptionPane.INFORMATION_MESSAGE);
            getError="Error";
            jTxtCMLicenseNo.requestFocus();
        }  
        else if (jTxtCMEmail.getText().equals("")){
            JOptionPane.showMessageDialog(this,"Email field should not be Null","Field Null",JOptionPane.INFORMATION_MESSAGE);
            getError="Error";
            jTxtCMEmail.requestFocus();
        }  
        else if (jTxtCMOPhone.getText().equals("")){
            JOptionPane.showMessageDialog(this,"Phone(Off) field should not be Null","Field Null",JOptionPane.INFORMATION_MESSAGE);
            getError="Error";
            jTxtCMOPhone.requestFocus();
        }  
        else if (jTxtCMRPhone.getText().equals("")){
            JOptionPane.showMessageDialog(this,"Phone(Res) field should not be Null","Field Null",JOptionPane.INFORMATION_MESSAGE);
            getError="Error";
            jTxtCMRPhone.requestFocus();
        }  
        else if (jTxtCMMobile.getText().equals("")){
            JOptionPane.showMessageDialog(this,"Mobile field should not be Null","Field Null",JOptionPane.INFORMATION_MESSAGE);
            getError="Error";
            jTxtCMMobile.requestFocus();
        }  
        else if (jTxtCMFax.getText().equals("")){
            JOptionPane.showMessageDialog(this,"Fax field should not be Null","Field Null",JOptionPane.INFORMATION_MESSAGE);
            getError="Error";
            jTxtCMFax.requestFocus();
        }  
        else{
        getError="NoError";
        }
    }
    
     /** To Activate Or Inactivate the particular row in the Table */
     public void activate(String Activate,String TableName,String OrderBy){
        accessDB();
        tableRow=jTblDisplay.getSelectedRow();
                
            if (tableRow==-1)
                  tableRow=0;
                 
        try{
          stat.executeUpdate("Update "+TableName+" set Active='"+Activate+"' where CustCode='"+tableData [tableRow][0]+"'");
          con.close();
          displayData(TableName,OrderBy);
        }
        catch(Exception ex)
        {
            System.out.println("Error in activate "+ex);
        }
     }
    
    /** To get all Particular Column values from Table in ComboBox */
     public void comboAddItem(String TableName,javax.swing.JComboBox comboBox,String TableColumn){
         
         accessDB();
         try{
             ResultSet res=stat.executeQuery("Select "+TableColumn+" from "+TableName);
             comboBox.removeAllItems();
             while (res.next()){
                 comboBox.addItem(res.getString(1));
             }
         }
         catch(Exception ex){
             System.out.println("Error in comboAddItem "+ex);
         }
     }
    
    /** sorts the Strings in alphabatic order and used in search method below */ 
    public void sortStrings(Object [][] rawData,int rows,int colNo,javax.swing.JList listSearch){
         list.removeAllElements();
         sorted=new String[rows];
         unsorted=new String[rows]; 
         
         for(j=0;j<rows;j++){
            unsorted[j]=((String)(rawData[j][colNo])).trim();
            sorted[j]=unsorted[j];  
         }
         
         for (j=0;j<rows;j++){
             for(i=j+1;i<rows;i++){
                 if (sorted[i].compareToIgnoreCase(sorted[j])<0){
                     String temp=sorted[j];
                     sorted[j]=sorted[i];
                     sorted[i]=temp;                     
                 }
             }
         }
         for(j=0;j<rows;j++){
             list.addElement(sorted[j]);
             listSearch.setListData(list);
         }
     }
     
     /** method supporting the search method below*/
     public void displaySearch(javax.swing.JList listSearch){
         for(i=0;i<sorted.length;i++){
             if (sorted[i].regionMatches(true,0,key,0,key.length())){
                 listSearch.setSelectedValue(sorted[i],true);
                 eleFound=true;
                 break;
             }
         }
         if(!eleFound)
             JOptionPane.showMessageDialog(this,"No match found","Sorry",JOptionPane.ERROR_MESSAGE);
         
         eleFound=false;
     }
     
    
     /** display the text in the jListSearch in alphabatic order */
     public void search(javax.swing.JList listSearch){
       if(RowCount>=1){  
         if (jRBtnCMComplete.isSelected()){
             displayData("CustMaster","CustName");
             list = new Vector(RowCount);
             if(jCboCMSearch.getSelectedItem().equals("Customer Code"))
                 sortStrings(tableData,RowCount,0,listSearch);
             else
                 sortStrings(tableData,RowCount,1,listSearch);

             displaySearch(listSearch);
             jTblDisplay.clearSelection();      
             int index=searchElement(  (String)( jListCMSearch.getSelectedValue() )  ,unsorted   );
             jTblDisplay.changeSelection( index ,0,true,false);
        }
        else if(jRBtnCMActive.isSelected()){
            displayData("CustMaster","Active","Y","CustName");
             list = new Vector(RowCount);
             if(jCboCMSearch.getSelectedItem().equals("Customer Code"))
                 sortStrings(tableData,RowCount,0,listSearch);
             else
                 sortStrings(tableData,RowCount,1,listSearch);

             displaySearch(listSearch);
             jTblDisplay.clearSelection();      
             int index=searchElement(  (String)( jListCMSearch.getSelectedValue() )  ,unsorted   );
             jTblDisplay.changeSelection( index ,0,true,false);
        }
        else if(jRBtnCMInActive.isSelected()){
            displayData("CustMaster","Active","N","CustName");
             list = new Vector(RowCount);
             if(jCboCMSearch.getSelectedItem().equals("Customer Code"))
                 sortStrings(tableData,RowCount,0,listSearch);
             else
                 sortStrings(tableData,RowCount,1,listSearch);

             displaySearch(listSearch);
             jTblDisplay.clearSelection();      
             int index=searchElement(  (String)( jListCMSearch.getSelectedValue() )  ,unsorted   );
             jTblDisplay.changeSelection( index ,0,true,false);
        }
       }
     }
     
      /** To get the row Count of the Jtable on selection of an item in listSearch */
      private int searchElement(String key, String[] a) {
        int indx=-1;
        for(i=0;i<a.length;i++){
            if( key.equals(a[i]) )
                indx=i;
        }            
        return indx;
     }
      
       /** Changes to be performed on click of Search Button */
      private void searchPressed(){
       if(RowCount==0){
           JOptionPane.showMessageDialog(this,"Database is Empty, Add new Data","Search",JOptionPane.INFORMATION_MESSAGE);
       }      
       else{        
        jPnlCMSearch.setVisible(true);
        jPnlCMAdd.setVisible(false);
        jPnlCMView.setVisible(true);
        jCboCMSearch.setSelectedIndex(0); 
        jListCMSearch.setSelectedIndex(0);
        jTblDisplay.clearSelection();
        int rowIndex=searchElement(  (String)( jListCMSearch.getSelectedValue() )  ,unsorted   );        
        jBtnCMModify.setEnabled(false);
        jBtnCMSearch.setEnabled(false);
        jTxtCMSearch.requestFocus();
        jTxtCMSearch.setText(""+jListCMSearch.getSelectedValue());
        jTxtCMSearch.selectAll();
        jTblDisplay.clearSelection();
        jTblDisplay.changeSelection( rowIndex ,0,true,false);       
        jRBtnCMComplete.setEnabled(false);
        jRBtnCMActive.setEnabled(false);
        jRBtnCMInActive.setEnabled(false);        
       }
     }
     
    /** Action to be performed on click of modify button */
     public void modify(){
         ModFlag=true;
         if (selrow==-1)
             selrow=0;
         
      if(jTblDisplay.getValueAt(selrow,13).equals("N"))
           JOptionPane.showMessageDialog(this,"Cannot Modify the InActivate Record","Information",JOptionPane.INFORMATION_MESSAGE);         
      else if (!jRBtnCMInActive.isSelected()){   
        jPnlCMAdd.setVisible(true);
        jPnlCMView.setVisible(false);
        clearText();
        tableRow=jTblDisplay.getSelectedRow();
        
            if (tableRow==-1)
                  tableRow=0;
        
        jTxtCMCode.setText((String)(tableData [tableRow][0]));        
        jTxtCMName.setText((String)(tableData [tableRow][1]));
        jTxtCMStreet.setText((String)(tableData [tableRow][2]));
        jTxtCMLocality.setText((String)(tableData [tableRow][3]));
        jTxtCMCity.setText((String)(tableData [tableRow][4]));
        jTxtCMPin.setText((String)(tableData [tableRow][5]));
        jTxtCMEmail.setText((String)tableData [tableRow][6]);
        jTxtCMOPhone.setText((String)tableData [tableRow][7]);
        jTxtCMLicenseNo.setText((String)(tableData [tableRow][8]));
        jTxtCMRPhone.setText((String)(tableData [tableRow][9]));
        jTxtCMMobile.setText((String)(tableData [tableRow][10]));        
        jTxtCMFax.setText((String)(tableData [tableRow][11]));
        jCboCMRating.setSelectedItem((String)(tableData [tableRow][12]));
        jTxtCMName.requestFocus();
        jTxtCMName.selectAll();
      }
      else
          jBtnCMModify.setEnabled(false); 
     }
    
     /** To check for unique entry in any particular field*/
     public void uniqueEntry(String findField,String Table,String inField,javax.swing.JTextField jTxtField){
        accessDB();
        try{         
             String select;
             select="Select "+findField+" from "+Table+" where "+findField+" IN ('"+inField+"')";
             ResultSet res=stat.executeQuery(select);
          if(!ModFlag){   
                if(res.next()){                             
                      jTxtField.requestFocus();
                      jTxtField.setText("");
                      con.close();        
                      JOptionPane.showMessageDialog(this,"Field Value already exists","UniqueEntry",JOptionPane.INFORMATION_MESSAGE);  
                }
          }
             con.close();
        }
        catch(Exception ex){
            System.out.println("Error in Unique Entry "+ex);
        }
    }
    
    /** Allow Only Numbers to be entered in the text field */
    public void numberOnly(java.awt.event.KeyEvent num,javax.swing.JTextField jTxt){
         int KeyCode= num.getKeyCode();
         char KeyChar=num.getKeyChar();
         String KeyEntered="";
         StringBuffer StoreString;
         if (KeyCode >= 48 && KeyCode <= 57 || KeyCode==46 ){
             // Key Code of Numbers  
            KeyEntered+=String.valueOf(KeyChar);
            KeyEntered=KeyEntered.trim();
         }
         else if (KeyCode >= 96 && KeyCode <= 105 || KeyCode==110){
             KeyEntered+=String.valueOf(KeyChar);
             KeyEntered=KeyEntered.trim();;//Side Pallete Numbers and Dot
         }
         else if (KeyCode >= 37 && KeyCode <= 40){
             ;//up,down,right,left arrows    
         }
         else if (KeyCode >= 0 && KeyCode <= 32 || KeyCode==127){
             ;//Key code of non printable characters  
         }
         else{
             //System.out.println(KeyCode);
              StoreString=new StringBuffer(KeyEntered);
            if (StoreString.length()>0){
            StoreString.setLength(StoreString.length()-1);
            }
              KeyEntered=StoreString.toString();
              JOptionPane.showMessageDialog(this,"Enter Only Numbers","Number Only",JOptionPane.ERROR_MESSAGE);
              jTxt.setText(KeyEntered);
         }  
     }  
    
    /**
    * @param args the command line arguments
    */
    /*public static void main(String args[]) {
        new CustomerMaster().show();
    }//*/


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLblCMEmail;
    private javax.swing.JPanel jPnlCMAdd;
    private javax.swing.JButton jBtnCMSearch;
    private javax.swing.JTextField jTxtCMSearch;
    private javax.swing.JLabel jLblCMCode;
    private javax.swing.JTextField jTxtCMMobile;
    private javax.swing.JComboBox jCboCMSearch;
    private javax.swing.JPanel jPnlCMView;
    private javax.swing.JLabel jLblCMStreet;
    private javax.swing.JButton jBtnCMSave;
    private javax.swing.JLabel jLblCMLicenseNo;
    private javax.swing.JTabbedPane jTPCMAddress;
    private javax.swing.JTextField jTxtCMLocality;
    private javax.swing.JScrollPane jSPaneCM;
    private javax.swing.JLabel jLblCMRating;
    private javax.swing.JLabel jLblCMMain;
    private javax.swing.JLabel jLblCMCity;
    private javax.swing.JButton jBtnCMAddSearch;
    private javax.swing.JButton jBtnCMActivate;
    private javax.swing.JLabel jLblCMLocality;
    private javax.swing.JButton jBtnCMExit;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel jLblCMMobile;
    private javax.swing.JLabel jLblCMPin;
    private javax.swing.JPanel jPnlCMViewOption;
    private javax.swing.JRadioButton jRBtnCMComplete;
    private javax.swing.JTextField jTxtCMName;
    private javax.swing.JTextField jTxtCMStreet;
    private javax.swing.JPanel jPnlCMSearch;
    private javax.swing.JTextField jTxtCMFax;
    private javax.swing.JRadioButton jRBtnCMActive;
    private javax.swing.JTextField jTxtCMLicenseNo;
    private javax.swing.JLabel jLblCMRPhone;
    private javax.swing.JComboBox jCboCMRating;
    private javax.swing.JLabel jLblCMName;
    private javax.swing.JTextField jTxtCMCode;
    private javax.swing.JList jListCMSearch;
    private javax.swing.JButton jBtnCMInActivate;
    private javax.swing.JButton jBtnCMAdd;
    private javax.swing.JPanel jPnlCMAddress;
    private javax.swing.JTextField jTxtCMCity;
    private javax.swing.JTextField jTxtCMRPhone;
    private javax.swing.JTable jTblDisplay;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JTextField jTxtCMPin;
    private javax.swing.JTextField jTxtCMOPhone;
    private javax.swing.JButton jBtnCMCancel;
    private javax.swing.JTextField jTxtCMEmail;
    private javax.swing.JLabel jLblCMOPhone;
    private javax.swing.JLabel jLblCMFax;
    private javax.swing.JRadioButton jRBtnCMInActive;
    private javax.swing.JButton jBtnCMSearchClose;
    private javax.swing.JButton jBtnCMModify;
    // End of variables declaration//GEN-END:variables
    /** Variable Declaration*/
    Connection con;
    Statement stat;
    String getError="",key="",sel="",unsorted[],sorted[];    
    Vector v=new Vector();
    Object tableData[][];    
    Vector list;    
    boolean eleFound,codeRepeated=false,ModFlag=false,clickH=false,NoNewSaveError=false;
    int j=0,h=0,i=0,ColCount=0,RowCount=0,tableRow=0,ctr=0,selrow=0;    
    StringBuffer sb;   
}

