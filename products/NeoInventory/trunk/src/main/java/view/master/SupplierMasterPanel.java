/*
 * SupplierMaster.java
 *
 * Created on 25 November 2002, 10:34
 */

package view.master;
import java.sql.*;
import java.lang.*;
import javax.swing.JOptionPane;
import java.util.*;
/**
 *
 * @author  Shanmugam
 */
public class SupplierMasterPanel extends javax.swing.JPanel {

    /** Creates new form SupplierMaster */
    public SupplierMasterPanel() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        buttonGroup1 = new javax.swing.ButtonGroup();
        jPnlSMView = new javax.swing.JPanel();
        jBtnSMModify = new javax.swing.JButton();
        jBtnSMSearch = new javax.swing.JButton();
        jBtnSMActivate = new javax.swing.JButton();
        jBtnSMInActivate = new javax.swing.JButton();
        jBtnSMAdd = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTblDisplay = new javax.swing.JTable();
        jBtnSMExit = new javax.swing.JButton();
        jPnlSMViewOption = new javax.swing.JPanel();
        jRBtnSMComplete = new javax.swing.JRadioButton();
        jRBtnSMActive = new javax.swing.JRadioButton();
        jRBtnSMInActive = new javax.swing.JRadioButton();
        jPnlSMSearch = new javax.swing.JPanel();
        jCboSMSearch = new javax.swing.JComboBox();
        jTxtSMSearch = new javax.swing.JTextField();
        jSPaneSM = new javax.swing.JScrollPane();
        jListSMSearch = new javax.swing.JList();
        jBtnSMSearchClose = new javax.swing.JButton();
        jPnlSMAdd = new javax.swing.JPanel();
        jLblSMCode = new javax.swing.JLabel();
        jLblSMName = new javax.swing.JLabel();
        jTxtSMName = new javax.swing.JTextField();
        jTPSMAddress = new javax.swing.JTabbedPane();
        jPnlSMAddress = new javax.swing.JPanel();
        jLblSMStreet = new javax.swing.JLabel();
        jTxtSMStreet = new javax.swing.JTextField();
        jLblSMLocality = new javax.swing.JLabel();
        jTxtSMLocality = new javax.swing.JTextField();
        jLblSMCity = new javax.swing.JLabel();
        jLblSMPin = new javax.swing.JLabel();
        jTxtSMCity = new javax.swing.JTextField();
        jTxtSMPin = new javax.swing.JTextField();
        jLblSMEmail = new javax.swing.JLabel();
        jLblSMOPhone = new javax.swing.JLabel();
        jLblSMLicenseNo = new javax.swing.JLabel();
        jTxtSMLicenseNo = new javax.swing.JTextField();
        jLblSMRPhone = new javax.swing.JLabel();
        jTxtSMRPhone = new javax.swing.JTextField();
        jLblSMMobile = new javax.swing.JLabel();
        jTxtSMMobile = new javax.swing.JTextField();
        jLblSMFax = new javax.swing.JLabel();
        jTxtSMFax = new javax.swing.JTextField();
        jLblSMRating = new javax.swing.JLabel();
        jCboSMRating = new javax.swing.JComboBox();
        jBtnSMSave = new javax.swing.JButton();
        jTxtSMCode = new javax.swing.JTextField();
        jBtnSMCancel = new javax.swing.JButton();
        jTxtSMEmail = new javax.swing.JTextField();
        jTxtSMOPhone = new javax.swing.JTextField();
        jBtnSMAddSearch = new javax.swing.JButton();
        jLblSMMain = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                formComponentResized(evt);
            }
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });

        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
        });

        jPnlSMView.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPnlSMView.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                jPnlSMViewComponentResized(evt);
            }
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jPnlSMViewComponentShown(evt);
            }
        });

        jBtnSMModify.setMnemonic('m');
        jBtnSMModify.setText("Modify");
        jBtnSMModify.setToolTipText(" ");
        jBtnSMModify.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnSMModifyActionPerformed(evt);
            }
        });

        jPnlSMView.add(jBtnSMModify, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 370, 100, -1));

        jBtnSMSearch.setMnemonic('s');
        jBtnSMSearch.setText("Search");
        jBtnSMSearch.setToolTipText(" ");
        jBtnSMSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnSMSearchActionPerformed(evt);
            }
        });

        jPnlSMView.add(jBtnSMSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 370, 100, -1));

        jBtnSMActivate.setMnemonic('c');
        jBtnSMActivate.setText("Activate");
        jBtnSMActivate.setToolTipText(" ");
        jBtnSMActivate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnSMActivateActionPerformed(evt);
            }
        });

        jPnlSMView.add(jBtnSMActivate, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 370, 100, -1));

        jBtnSMInActivate.setMnemonic('n');
        jBtnSMInActivate.setText("InActivate");
        jBtnSMInActivate.setToolTipText(" ");
        jBtnSMInActivate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnSMInActivateActionPerformed(evt);
            }
        });

        jPnlSMView.add(jBtnSMInActivate, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 370, 100, -1));

        jBtnSMAdd.setMnemonic('a');
        jBtnSMAdd.setText("Add");
        jBtnSMAdd.setToolTipText(" ");
        jBtnSMAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnSMAddActionPerformed(evt);
            }
        });

        jPnlSMView.add(jBtnSMAdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 370, 100, -1));

        jScrollPane1.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        jScrollPane1.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                jScrollPane1ComponentResized(evt);
            }
        });

        jTblDisplay.setAlignmentX(1.0F);
        jTblDisplay.setAlignmentY(1.0F);
        jTblDisplay.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jTblDisplay.setPreferredScrollableViewportSize(new java.awt.Dimension(400, 400));
        jTblDisplay.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        jTblDisplay.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTblDisplayKeyPressed(evt);
            }
        });

        jTblDisplay.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTblDisplayMouseClicked(evt);
            }
        });

        jScrollPane1.setViewportView(jTblDisplay);

        jPnlSMView.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, 600, 290));

        jBtnSMExit.setMnemonic('x');
        jBtnSMExit.setText("Exit");
        jBtnSMExit.setToolTipText(" ");
        jBtnSMExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnSMExitActionPerformed(evt);
            }
        });

        jPnlSMView.add(jBtnSMExit, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 370, 100, -1));

        jPnlSMViewOption.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPnlSMViewOption.setBorder(new javax.swing.border.TitledBorder(null, "View Options", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 0, 14)));
        jRBtnSMComplete.setFont(new java.awt.Font("Dialog", 2, 12));
        jRBtnSMComplete.setMnemonic('l');
        jRBtnSMComplete.setText("All Data");
        jRBtnSMComplete.setToolTipText(" ");
        buttonGroup1.add(jRBtnSMComplete);
        jRBtnSMComplete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRBtnSMCompleteActionPerformed(evt);
            }
        });

        jPnlSMViewOption.add(jRBtnSMComplete, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 20, -1, -1));

        jRBtnSMActive.setFont(new java.awt.Font("Dialog", 2, 12));
        jRBtnSMActive.setMnemonic('t');
        jRBtnSMActive.setText("Active Data");
        jRBtnSMActive.setToolTipText(" ");
        buttonGroup1.add(jRBtnSMActive);
        jRBtnSMActive.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRBtnSMActiveActionPerformed(evt);
            }
        });

        jPnlSMViewOption.add(jRBtnSMActive, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 20, -1, -1));

        jRBtnSMInActive.setFont(new java.awt.Font("Dialog", 2, 12));
        jRBtnSMInActive.setMnemonic('i');
        jRBtnSMInActive.setText("In Active Data");
        jRBtnSMInActive.setToolTipText(" ");
        buttonGroup1.add(jRBtnSMInActive);
        jRBtnSMInActive.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRBtnSMInActiveActionPerformed(evt);
            }
        });

        jPnlSMViewOption.add(jRBtnSMInActive, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 20, -1, -1));

        jPnlSMView.add(jPnlSMViewOption, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 600, 60));

        jPnlSMSearch.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPnlSMSearch.setBorder(new javax.swing.border.TitledBorder(null, "Search", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Dialog", 0, 14)));
        jPnlSMSearch.setVisible(false);
        jCboSMSearch.addItem("Supplier Code");
        jCboSMSearch.addItem("Supplier Name");
        jCboSMSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCboSMSearchActionPerformed(evt);
            }
        });

        jCboSMSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jCboSMSearchKeyReleased(evt);
            }
        });

        jPnlSMSearch.add(jCboSMSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, 140, 20));

        jTxtSMSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTxtSMSearchKeyPressed(evt);
            }
        });

        jPnlSMSearch.add(jTxtSMSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, 140, 20));

        jListSMSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jListSMSearchKeyReleased(evt);
            }
        });

        jListSMSearch.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jListSMSearchMouseClicked(evt);
            }
        });

        jSPaneSM.setViewportView(jListSMSearch);

        jPnlSMSearch.add(jSPaneSM, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, 140, 270));

//        jBtnSMSearchClose.setIcon(new javax.swing.ImageIcon("C:\\Program Files\\Microsoft Visual Studio\\Common\\Graphics\\Bitmaps\\TlBr_W95\\BACK.BMP"));
        jBtnSMSearchClose.setMnemonic('e');
        jBtnSMSearchClose.setText("Search Close");
        jBtnSMSearchClose.setToolTipText(" ");
        jBtnSMSearchClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnSMSearchCloseActionPerformed(evt);
            }
        });

        jPnlSMSearch.add(jBtnSMSearchClose, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 360, 140, -1));

        jPnlSMView.add(jPnlSMSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 10, 160, 390));

        add(jPnlSMView, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, 810, 440));

        jPnlSMAdd.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPnlSMAdd.setVisible(false);
        jPnlSMAdd.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jPnlSMAddComponentShown(evt);
            }
        });

        jLblSMCode.setForeground(new java.awt.Color(0, 51, 51));
        jLblSMCode.setText("Code");
        jPnlSMAdd.add(jLblSMCode, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, -1, 20));

        jLblSMName.setForeground(new java.awt.Color(0, 51, 51));
        jLblSMName.setText("Name");
        jPnlSMAdd.add(jLblSMName, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, -1, 20));

        jTxtSMName.setBackground(new java.awt.Color(204, 255, 255));
        jTxtSMName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTxtSMNameFocusGained(evt);
            }
        });

        jPnlSMAdd.add(jTxtSMName, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 60, 320, 20));

        jTPSMAddress.setForeground(new java.awt.Color(0, 51, 51));
        jPnlSMAddress.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLblSMStreet.setFont(new java.awt.Font("Dialog", 3, 10));
        jLblSMStreet.setForeground(new java.awt.Color(0, 51, 51));
        jLblSMStreet.setText("Street");
        jPnlSMAddress.add(jLblSMStreet, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 40, 20));

        jTxtSMStreet.setBackground(new java.awt.Color(204, 255, 255));
        jPnlSMAddress.add(jTxtSMStreet, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 10, 310, 20));

        jLblSMLocality.setFont(new java.awt.Font("Dialog", 3, 10));
        jLblSMLocality.setForeground(new java.awt.Color(0, 51, 51));
        jLblSMLocality.setText("Locality");
        jPnlSMAddress.add(jLblSMLocality, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, -1, 20));

        jTxtSMLocality.setBackground(new java.awt.Color(204, 255, 255));
        jPnlSMAddress.add(jTxtSMLocality, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 40, 310, 20));

        jLblSMCity.setFont(new java.awt.Font("Dialog", 3, 10));
        jLblSMCity.setForeground(new java.awt.Color(0, 51, 51));
        jLblSMCity.setText("City");
        jPnlSMAddress.add(jLblSMCity, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, 30, 20));

        jLblSMPin.setFont(new java.awt.Font("Dialog", 3, 10));
        jLblSMPin.setForeground(new java.awt.Color(0, 51, 51));
        jLblSMPin.setText("Pin");
        jPnlSMAddress.add(jLblSMPin, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, -1, 20));

        jTxtSMCity.setBackground(new java.awt.Color(204, 255, 255));
        jPnlSMAddress.add(jTxtSMCity, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 70, 310, 20));

        jTxtSMPin.setBackground(new java.awt.Color(204, 255, 255));
        jPnlSMAddress.add(jTxtSMPin, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 100, 310, 20));

        jTPSMAddress.addTab("Address", jPnlSMAddress);

        jPnlSMAdd.add(jTPSMAddress, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 80, 410, 160));

        jLblSMEmail.setForeground(new java.awt.Color(0, 51, 51));
        jLblSMEmail.setText("Email ID");
        jPnlSMAdd.add(jLblSMEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 280, -1, 20));

        jLblSMOPhone.setForeground(new java.awt.Color(0, 51, 51));
        jLblSMOPhone.setText("Phone (O)");
        jPnlSMAdd.add(jLblSMOPhone, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 310, -1, 20));

        jLblSMLicenseNo.setForeground(new java.awt.Color(0, 51, 51));
        jLblSMLicenseNo.setText("LicenseNo");
        jPnlSMAdd.add(jLblSMLicenseNo, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 250, -1, 20));

        jTxtSMLicenseNo.setBackground(new java.awt.Color(204, 255, 255));
        jTxtSMLicenseNo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTxtSMLicenseNoFocusLost(evt);
            }
        });

        jPnlSMAdd.add(jTxtSMLicenseNo, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 250, 320, 20));

        jLblSMRPhone.setForeground(new java.awt.Color(0, 51, 51));
        jLblSMRPhone.setText("Phone (R)");
        jPnlSMAdd.add(jLblSMRPhone, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 340, -1, 20));

        jTxtSMRPhone.setBackground(new java.awt.Color(204, 255, 255));
        jTxtSMRPhone.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTxtSMRPhoneFocusLost(evt);
            }
        });

        jPnlSMAdd.add(jTxtSMRPhone, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 340, 130, 20));

        jLblSMMobile.setForeground(new java.awt.Color(0, 51, 51));
        jLblSMMobile.setText("Mobile");
        jPnlSMAdd.add(jLblSMMobile, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 340, -1, 20));

        jTxtSMMobile.setBackground(new java.awt.Color(204, 255, 255));
        jTxtSMMobile.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTxtSMMobileFocusLost(evt);
            }
        });

        jPnlSMAdd.add(jTxtSMMobile, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 340, 140, 20));

        jLblSMFax.setForeground(new java.awt.Color(0, 51, 51));
        jLblSMFax.setText("Fax");
        jPnlSMAdd.add(jLblSMFax, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 370, -1, 20));

        jTxtSMFax.setBackground(new java.awt.Color(204, 255, 255));
        jTxtSMFax.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTxtSMFaxFocusLost(evt);
            }
        });

        jPnlSMAdd.add(jTxtSMFax, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 370, 130, 20));

        jLblSMRating.setForeground(new java.awt.Color(0, 51, 51));
        jLblSMRating.setText("Rating");
        jPnlSMAdd.add(jLblSMRating, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 370, -1, 20));

        jCboSMRating.addItem("A+");
        jCboSMRating.addItem("B+");
        jCboSMRating.addItem("C+");
        jCboSMRating.addItem("A-");
        jCboSMRating.addItem("B-");
        jCboSMRating.addItem("C-");

        jPnlSMAdd.add(jCboSMRating, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 370, 140, 20));

        jBtnSMSave.setMnemonic('s');
        jBtnSMSave.setText("Save");
        jBtnSMSave.setToolTipText(" ");
        jBtnSMSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnSMSaveActionPerformed(evt);
            }
        });

        jPnlSMAdd.add(jBtnSMSave, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 440, 100, -1));

        jTxtSMCode.setBackground(new java.awt.Color(204, 255, 255));
        jTxtSMCode.setEditable(false);
        jPnlSMAdd.add(jTxtSMCode, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 30, 320, 20));

        jBtnSMCancel.setMnemonic('c');
        jBtnSMCancel.setText("Cancel");
        jBtnSMCancel.setToolTipText(" ");
        jBtnSMCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnSMCancelActionPerformed(evt);
            }
        });

        jPnlSMAdd.add(jBtnSMCancel, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 440, 100, -1));

        jTxtSMEmail.setBackground(new java.awt.Color(204, 255, 255));
        jTxtSMEmail.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTxtSMEmailFocusLost(evt);
            }
        });

        jPnlSMAdd.add(jTxtSMEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 280, 320, 20));

        jTxtSMOPhone.setBackground(new java.awt.Color(204, 255, 255));
        jTxtSMOPhone.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTxtSMOPhoneFocusLost(evt);
            }
        });

        jPnlSMAdd.add(jTxtSMOPhone, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 310, 320, 20));

        jBtnSMAddSearch.setMnemonic('e');
        jBtnSMAddSearch.setText("Search");
        jBtnSMAddSearch.setToolTipText(" ");
        jBtnSMAddSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnSMAddSearchActionPerformed(evt);
            }
        });

        jPnlSMAdd.add(jBtnSMAddSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 440, 100, -1));

        add(jPnlSMAdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 70, 440, 500));

        jLblSMMain.setFont(new java.awt.Font("Trebuchet MS", 1, 24));
        jLblSMMain.setForeground(new java.awt.Color(0, 0, 153));
        jLblSMMain.setText("Supplier Master");
        add(jLblSMMain, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 30, -1, -1));

    }//GEN-END:initComponents

    private void jScrollPane1ComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jScrollPane1ComponentResized
        // Add your handling code here:
        h=jTblDisplay.getRowHeight()*(RowCount+1);
            if(h<290)
                jScrollPane1.setSize(600,h+20);
            else
                jScrollPane1.setSize(600,290);
    }//GEN-LAST:event_jScrollPane1ComponentResized

    private void jTxtSMFaxFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTxtSMFaxFocusLost
        // Add your handling code here:
        uniqueEntry("Fax","SupplierMaster",jTxtSMFax.getText(),jTxtSMFax);
    }//GEN-LAST:event_jTxtSMFaxFocusLost

    private void jTxtSMMobileFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTxtSMMobileFocusLost
        // Add your handling code here:
        uniqueEntry("Mobile","SupplierMaster",jTxtSMMobile.getText(),jTxtSMMobile);
    }//GEN-LAST:event_jTxtSMMobileFocusLost

    private void jTxtSMRPhoneFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTxtSMRPhoneFocusLost
        // Add your handling code here:
        uniqueEntry("Rphone","SupplierMaster",jTxtSMRPhone.getText(),jTxtSMRPhone);
    }//GEN-LAST:event_jTxtSMRPhoneFocusLost

    private void jTxtSMOPhoneFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTxtSMOPhoneFocusLost
        // Add your handling code here:
        uniqueEntry("OPhone","SupplierMaster",jTxtSMOPhone.getText(),jTxtSMOPhone);
    }//GEN-LAST:event_jTxtSMOPhoneFocusLost

    private void jTxtSMEmailFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTxtSMEmailFocusLost
        // Add your handling code here:
        uniqueEntry("Email","SupplierMaster",jTxtSMEmail.getText(),jTxtSMEmail);
    }//GEN-LAST:event_jTxtSMEmailFocusLost

    private void jTxtSMLicenseNoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTxtSMLicenseNoFocusLost
        // Add your handling code here:
        uniqueEntry("LicenseNo","SupplierMaster",jTxtSMLicenseNo.getText(),jTxtSMLicenseNo);
    }//GEN-LAST:event_jTxtSMLicenseNoFocusLost

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        // Add your handling code here:
        displayData("SupplierMaster","SupName");
    }//GEN-LAST:event_formComponentShown

    private void jPnlSMViewComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPnlSMViewComponentShown
        // Add your handling code here:
        displayData("SupplierMaster","SupName");
        if(RowCount>=1){
             jTblDisplay.clearSelection(); 
             jCboSMSearch.setSelectedIndex(0);
             int index=searchElement(  (String)( jListSMSearch.getSelectedValue() )  ,unsorted   );
             jTblDisplay.changeSelection( index ,0,true,false);
        }
    }//GEN-LAST:event_jPnlSMViewComponentShown

    private void jBtnSMAddSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnSMAddSearchActionPerformed
        // Add your handling code here:
        jRBtnSMComplete.setSelected(true);
        jBtnSMActivate.setEnabled(true);        
        searchPressed();
    }//GEN-LAST:event_jBtnSMAddSearchActionPerformed

    private void jPnlSMViewComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPnlSMViewComponentResized
        // Add your handling code here:
        displayData("SupplierMaster","SupName");
    }//GEN-LAST:event_jPnlSMViewComponentResized

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
        // Add your handling code here:
        if(evt.getKeyCode()==evt.VK_ALT)
          jBtnSMSearchClose.requestFocus();
    }//GEN-LAST:event_formKeyPressed

    private void jTblDisplayMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTblDisplayMouseClicked
        // Add your handling code here:
        clickH=true;
        selrow=jTblDisplay.getSelectedRow();
    }//GEN-LAST:event_jTblDisplayMouseClicked

    private void jPnlSMAddComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPnlSMAddComponentShown
        // Add your handling code here:
       // jPnlSMAdd.setLocation(90,70);
    }//GEN-LAST:event_jPnlSMAddComponentShown

    private void formComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentResized
        // Add your handling code here:
       // jPnlSMAdd.setLocation(90,70);
    }//GEN-LAST:event_formComponentResized

    private void jRBtnSMInActiveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRBtnSMInActiveActionPerformed
        // Add your handling code here:
        displayData("SupplierMaster","Active","N","SupName");
        jBtnSMAdd.setEnabled(false);
        jBtnSMModify.setEnabled(false);
        jBtnSMSearch.setEnabled(true);
        jBtnSMActivate.setEnabled(true);
        jBtnSMInActivate.setEnabled(false);
    }//GEN-LAST:event_jRBtnSMInActiveActionPerformed

    private void jRBtnSMActiveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRBtnSMActiveActionPerformed
        // Add your handling code here:
        displayData("SupplierMaster","Active","Y","SupName");
        jBtnSMAdd.setEnabled(true);
        jBtnSMModify.setEnabled(true);
        jBtnSMSearch.setEnabled(true);
        jBtnSMActivate.setEnabled(false);
        jBtnSMInActivate.setEnabled(true);
    }//GEN-LAST:event_jRBtnSMActiveActionPerformed

    private void jRBtnSMCompleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRBtnSMCompleteActionPerformed
        // Add your handling code here:
        displayData("SupplierMaster","SupName");
        jBtnSMAdd.setEnabled(true);
        jBtnSMModify.setEnabled(true);
        jBtnSMSearch.setEnabled(true);
        jBtnSMActivate.setEnabled(true);
        jBtnSMInActivate.setEnabled(true);
    }//GEN-LAST:event_jRBtnSMCompleteActionPerformed

    private void jTxtSMNameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTxtSMNameFocusGained
        // Add your handling code here:
         
    }//GEN-LAST:event_jTxtSMNameFocusGained

    private void jCboSMSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jCboSMSearchKeyReleased
        // Add your handling code here:
         int KeyCode=evt.getKeyCode();
        if(KeyCode==evt.VK_UP||KeyCode==evt.VK_DOWN)
            jTxtSMSearch.requestFocus();
        else if(KeyCode==evt.VK_ENTER)
             jTxtSMSearch.requestFocus();
        
        jTxtSMSearch.enable();
        jTxtSMSearch.requestFocus(); 
        key="";
        jTxtSMSearch.setText("");
        if (jRBtnSMInActive.isSelected()) 
           jBtnSMModify.setEnabled(false);
        else
           jBtnSMModify.setEnabled(true);
        
        search(jListSMSearch);
    }//GEN-LAST:event_jCboSMSearchKeyReleased

    private void jListSMSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jListSMSearchKeyReleased
        // Add your handling code here:
        int KeyCode=evt.getKeyCode();
        if(KeyCode==evt.VK_UP||KeyCode==evt.VK_DOWN){
             jTblDisplay.clearSelection();      
             int index=searchElement(  (String)( jListSMSearch.getSelectedValue() )  ,unsorted   );
             jTblDisplay.changeSelection( index ,0,true,false);
             jTxtSMSearch.setText(""+ jListSMSearch.getSelectedValue());
             jTxtSMSearch.selectAll();
        }
        else if(KeyCode==evt.VK_ENTER){
            if (jRBtnSMInActive.isSelected()) 
                jBtnSMModify.setEnabled(false);
           else{
                int index=searchElement(  (String)( jListSMSearch.getSelectedValue() )  ,unsorted   );               
                selrow=index;                
                modify();                
           }
        }
         
       if (jRBtnSMInActive.isSelected()) 
           jBtnSMModify.setEnabled(false);
       else
           jBtnSMModify.setEnabled(true);
    }//GEN-LAST:event_jListSMSearchKeyReleased

    private void jBtnSMExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnSMExitActionPerformed
        // Add your handling code here:
 this.setVisible(false);
    }//GEN-LAST:event_jBtnSMExitActionPerformed

    private void jTblDisplayKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTblDisplayKeyPressed
        // Add your handling code here:
        int KeyCode=evt.getKeyCode();
        if (KeyCode==evt.VK_TAB){
            if(jPnlSMSearch.isVisible())
                jCboSMSearch.requestFocus();
            else
                jBtnSMAdd.requestFocus();
        }
    }//GEN-LAST:event_jTblDisplayKeyPressed

    private void jTxtSMSearchKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTxtSMSearchKeyPressed
        // Add your handling code here:
        char KeyChar=evt.getKeyChar();
        int KeyCode=evt.getKeyCode();
        if(KeyCode==evt.VK_BACK_SPACE||KeyCode==evt.VK_DELETE){
            sb=new StringBuffer(key);
            if (sb.length()>0){
            sb.setLength(sb.length()-1);
            }
            key=sb.toString();
        }
        else if(KeyCode==evt.VK_ALT || KeyCode==evt.VK_CONTROL || KeyCode==evt.VK_SHIFT){ 
            ;
        } 
        else if(KeyCode==evt.VK_UP || KeyCode==evt.VK_DOWN){
               if (jRBtnSMInActive.isSelected()) 
                  jBtnSMModify.setEnabled(false);
               else
                   jBtnSMModify.setEnabled(true);
        }
        else if(KeyCode==evt.VK_TAB){
              jListSMSearch.requestFocus();
              jListSMSearch.setSelectedIndex(1);
        }
        else if(KeyCode==evt.VK_ENTER){ 
            if (jRBtnSMInActive.isSelected()){ 
                   jBtnSMModify.setEnabled(false);
                   jCboSMSearch.requestFocus();                
            }
            else if(jTxtSMSearch.getText().equals(""))
                ;
            else{
                 int index=searchElement(  (String)( jListSMSearch.getSelectedValue() )  ,unsorted   );                                    
                 selrow=index;                 
                 modify();               
            }                            
        }
        else if(KeyCode>=33 && KeyCode<=126){
            key+=String.valueOf(KeyChar);
            key=key.trim();
        }
        else
           JOptionPane.showMessageDialog(this,"Enter Suitable value","Error",JOptionPane.INFORMATION_MESSAGE); 
            
        if (jRBtnSMInActive.isSelected()) 
           jBtnSMModify.setEnabled(false);
        else
           jBtnSMModify.setEnabled(false);
            
        search(jListSMSearch);        
    }//GEN-LAST:event_jTxtSMSearchKeyPressed

    private void jBtnSMInActivateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnSMInActivateActionPerformed
        // Add your handling code here:
       if (jTblDisplay.getSelectedColumn()!=-1){  
        activate("N","SupplierMaster","SupplierMaster.SupName"); 
        jRBtnSMComplete.setSelected(true);
        jBtnSMAdd.setEnabled(true);
        jBtnSMModify.setEnabled(true);
        jBtnSMSearch.setEnabled(true);
        jBtnSMInActivate.setEnabled(true);
        jPnlSMSearch.setVisible(false);
        jRBtnSMComplete.setEnabled(true);
        jRBtnSMActive.setEnabled(true);
        jRBtnSMInActive.setEnabled(true);
       }
       else
           JOptionPane.showMessageDialog(this,"Select any row in the grid","Information",JOptionPane.INFORMATION_MESSAGE);
  
    }//GEN-LAST:event_jBtnSMInActivateActionPerformed

    private void jBtnSMActivateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnSMActivateActionPerformed
        // Add your handling code here:
         if (jTblDisplay.getSelectedColumn()!= -1){ 
            activate("Y","SupplierMaster","SupplierMaster.SupName");
            jRBtnSMComplete.setSelected(true);
            jBtnSMAdd.setEnabled(true);
            jBtnSMModify.setEnabled(true);
            jBtnSMSearch.setEnabled(true);
            jBtnSMInActivate.setEnabled(true);
            jPnlSMSearch.setVisible(false);
            jRBtnSMComplete.setEnabled(true);
            jRBtnSMActive.setEnabled(true);
            jRBtnSMInActive.setEnabled(true);
       }
       else
           JOptionPane.showMessageDialog(this,"Select any row in the grid","Information",JOptionPane.INFORMATION_MESSAGE);
        
    }//GEN-LAST:event_jBtnSMActivateActionPerformed

    private void jBtnSMCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnSMCancelActionPerformed
        // Add your handling code here:
        if(RowCount>=1){
            jCboSMSearch.setSelectedIndex(0);
        }
        jPnlSMView.setVisible(true);
        jPnlSMSearch.setVisible(false);        
        jPnlSMAdd.setVisible(false);
        jTblDisplay.requestFocus();
        jBtnSMModify.setEnabled(true);
        jBtnSMSearch.setEnabled(true);
        jRBtnSMComplete.setEnabled(true);
        jRBtnSMActive.setEnabled(true);
        jRBtnSMInActive.setEnabled(true);
        jBtnSMActivate.setEnabled(true);
        jRBtnSMComplete.setSelected(true);
    }//GEN-LAST:event_jBtnSMCancelActionPerformed

    private void jListSMSearchMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jListSMSearchMouseClicked
        // Add your handling code here:
        int keyCode=evt.getClickCount();
           if(keyCode==1){
             jTblDisplay.clearSelection();      
             int index=searchElement(  (String)( jListSMSearch.getSelectedValue() )  ,unsorted   );
             jTblDisplay.changeSelection( index ,0,true,false);
             jTxtSMSearch.setText(""+jListSMSearch.getSelectedValue());
             jTxtSMSearch.selectAll();
           }
           else{
             jTblDisplay.clearSelection();      
             int index=searchElement(  (String)( jListSMSearch.getSelectedValue() )  ,unsorted   );
             jTblDisplay.changeSelection( index ,0,true,false);
             selrow=jTblDisplay.getSelectedRow();             
             modify();            
           }        
    }//GEN-LAST:event_jListSMSearchMouseClicked

    private void jCboSMSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCboSMSearchActionPerformed
        // Add your handling code here:
        jTxtSMSearch.enable();
        jTxtSMSearch.requestFocus(); 
        key="";
             search(jListSMSearch);
             if(RowCount>=1){
                 jTblDisplay.clearSelection();      
                 int index=searchElement(  (String)( jListSMSearch.getSelectedValue() )  ,unsorted   );
                 jTblDisplay.changeSelection( index ,0,true,false);
                 jTxtSMSearch.setText(""+jListSMSearch.getSelectedValue());
                 jTxtSMSearch.selectAll();
             }
        if (jRBtnSMInActive.isSelected())
            jBtnSMModify.setEnabled(false);
        else
            jBtnSMModify.setEnabled(true);
       
    }//GEN-LAST:event_jCboSMSearchActionPerformed

    private void jBtnSMSearchCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnSMSearchCloseActionPerformed
        // Add your handling code here:
                jPnlSMSearch.setVisible(false);
                jTblDisplay.requestFocus();
                jCboSMSearch.setSelectedIndex(0);
                jBtnSMSearch.setEnabled(true);            
                jRBtnSMComplete.setEnabled(true);
                jRBtnSMActive.setEnabled(true);
                jRBtnSMInActive.setEnabled(true);
             if (jRBtnSMInActive.isSelected())
                 jBtnSMModify.setEnabled(false);
             else
                 jBtnSMModify.setEnabled(true);
    }//GEN-LAST:event_jBtnSMSearchCloseActionPerformed

    private void jBtnSMSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnSMSearchActionPerformed
        // Add your handling code here:
           searchPressed();
    }//GEN-LAST:event_jBtnSMSearchActionPerformed

    private void jBtnSMModifyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnSMModifyActionPerformed
        // Add your handling code here:
        if(jTblDisplay.getSelectedColumn()!=-1){
            modify();      
            jBtnSMAddSearch.setVisible(true);
        }
        else
           JOptionPane.showMessageDialog(this,"Select any row in the grid","Information",JOptionPane.INFORMATION_MESSAGE);

    }//GEN-LAST:event_jBtnSMModifyActionPerformed

    private void jBtnSMSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnSMSaveActionPerformed
        // Add your handling code here:
          accessDB();
          componentNull();
     if (getError.equals("NoError"))
     {      
        if (ModFlag==false) 
        {  
           int ansSave=JOptionPane.showConfirmDialog(this,"       Are u confirm to save","Save",JOptionPane.YES_NO_OPTION);
           if (ansSave==0){ 
                newSaveDB();
                 if(NoNewSaveError)
                    updateCode("SupplierMaster");
                clearText();
                jTblDisplay.requestFocus();
           }
           else{
             clearText();
             jTblDisplay.requestFocus();
           }           
         }
         else 
         {
            int ansModify=JOptionPane.showConfirmDialog(this,"      Are u confirm to Modify","Save",JOptionPane.YES_NO_OPTION);
            if (ansModify==0){  
                modifySaveDB();
                clearText();
                jTblDisplay.requestFocus();
            }
            else{
                 clearText();
                 jTblDisplay.requestFocus();
           }
         }
            jPnlSMView.setVisible(true);
            jPnlSMAdd.setVisible(false);           
            jPnlSMSearch.setVisible(false);
          
            if (jRBtnSMComplete.isSelected())
               displayData("SupplierMaster","SupplierMaster.SupName");
            else if (jRBtnSMActive.isSelected())
              displayData("SupplierMaster","Active","Y","SupplierMaster.SupName");
            else if (jRBtnSMActive.isSelected())
              displayData("SupplierMaster","Active","N","SupplierMaster.SupName");
            
            jBtnSMModify.setEnabled(true);
            jCboSMSearch.setSelectedIndex(0);
            jBtnSMSearch.setEnabled(true);            
            jRBtnSMComplete.setEnabled(true);
            jRBtnSMActive.setEnabled(true);
            jRBtnSMInActive.setEnabled(true);
     }
     else
     {
        System.out.println("Error");
     }
    }//GEN-LAST:event_jBtnSMSaveActionPerformed

    private void jBtnSMAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnSMAddActionPerformed
        // Add your handling code here:
        ModFlag=false;
        clearText();          
        jPnlSMView.setVisible(false);
        jPnlSMAdd.setVisible(true);  
        jBtnSMAddSearch.setVisible(false);
        jTxtSMName.requestFocus(); 
        generateCode("SupplierMaster",jTxtSMCode);
    }//GEN-LAST:event_jBtnSMAddActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // Add your handling code here:
         jPnlSMAdd.setVisible(false);
         jPnlSMSearch.setVisible(false);
         jPnlSMView.setVisible(true);
         jBtnSMAdd.requestFocus();
         jRBtnSMComplete.setSelected(true);   
          try{
                accessDB();
                String ss = "SELECT * FROM SemaPhores WHERE TableName = 'SupplierMaster'";
                ResultSet res = stat.executeQuery(ss);
                if(!res.next()){
                    String ss1="Insert into SemaPhores (TableName,CtrName,MaxCtr) values('SupplierMaster','SM_',1)";
                   stat.executeUpdate(ss1);               
                }
                con.close();
           }
           catch(Exception ex){
               System.out.println("Error in form window opened "+ex);
           }
    }//GEN-LAST:event_formWindowOpened

    /** Exit the Application */
    private void exitForm(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_exitForm
         
    }//GEN-LAST:event_exitForm

     /** set the Component fields to null*/
    public void clearText(){
        jTxtSMCode.setText("") ; jTxtSMEmail.setText(""); jCboSMRating.setSelectedItem("");       
        jTxtSMName.setText(""); jTxtSMStreet.setText(""); jTxtSMLocality.setText("");
        jTxtSMCity.setText(""); jTxtSMPin.setText(""); jTxtSMLicenseNo.setText("");
        jTxtSMOPhone.setText(""); jTxtSMRPhone.setText("");jTxtSMFax.setText("");
        jTxtSMMobile.setText("");
    }
    
    /** Establish the Connection to the database */
    public void accessDB(){
       try
       { 
        Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
        con=DriverManager.getConnection("jdbc:odbc:sha");
        stat=con.createStatement();
       }
       catch(Exception ex)
       {
           System.out.println("Error in accessDB "+ex);
       }   
    }
    
    /** Save new record to the Database */
    public void newSaveDB(){
         try{
              String ins;
              ins="Insert into SupplierMaster (SupCode,SupName,Street,Locality,City,";
              ins+="pin,LicenseNo,Email,OPhone,Rphone,Mobile,Fax,Rating,Active)";
              ins+=" values('"+jTxtSMCode.getText()+"','"+jTxtSMName.getText()+"'";
              ins+=",'"+jTxtSMStreet.getText()+"','"+jTxtSMLocality.getText()+"'";
              ins+=",'"+jTxtSMCity.getText()+"','"+jTxtSMPin.getText()+"','"+jTxtSMLicenseNo.getText()+"'";
              ins+=",'"+jTxtSMEmail.getText()+"','"+jTxtSMOPhone.getText()+"'";
              ins+=",'"+jTxtSMRPhone.getText()+"','"+jTxtSMMobile.getText()+"','"+jTxtSMFax.getText()+"'";
              ins+=",'"+jCboSMRating.getSelectedItem()+"','Y')";
              stat.executeUpdate(ins);
              NoNewSaveError=true;
              con.close();
            }
            catch(Exception ex)
            {
                NoNewSaveError=false;
                System.out.println("Error in newSaveDB "+ex);
            }   
    }
    
    /** Save Modified record to the Database */
    public void modifySaveDB(){
        try{
                
                String upd;
                upd="Update SupplierMaster set SupName='"+jTxtSMName.getText()+"',Street='"+jTxtSMStreet.getText()+"'";
                upd+=",Locality='"+jTxtSMLocality.getText()+"',City='"+jTxtSMCity.getText()+"'";
                upd+=",Pin='"+jTxtSMPin.getText()+"',LicenseNo='"+jTxtSMLicenseNo.getText()+"'";
                upd+=",Email='"+jTxtSMEmail.getText()+"',OPhone='"+jTxtSMOPhone.getText()+"'";
                upd+=",RPhone='"+jTxtSMRPhone.getText()+"',Mobile='"+jTxtSMMobile.getText()+"'";
                upd+=",Fax='"+jTxtSMFax.getText()+"',Rating='"+jCboSMRating.getSelectedItem()+"'";
                upd+=" where SupCode='"+jTxtSMCode.getText()+"'";
                stat.executeUpdate(upd);                
                con.close();
            }
            catch(Exception ex)
            {
                System.out.println("Error in modifySaveDB "+ex);
            }
    }
      
    /** To Automatic generate next code after click of Add Button */
     private void generateCode(String TableName,javax.swing.JTextField jTxtCode){
     try{
         accessDB();
         String ss = "SELECT * FROM SemaPhores WHERE TableName = '"+TableName+"'";
         ResultSet res = stat.executeQuery(ss);
         res.next();
         ctr = Integer.parseInt(res.getString(4));
         if(ctr < 10)
            jTxtCode.setText(res.getString(3)+"00"+ctr);  
         else if(ctr >= 10 && ctr < 100)
            jTxtCode.setText(res.getString(3)+"0"+ctr); 
         else if(ctr >= 100 && ctr < 1000)
            jTxtCode.setText(res.getString(3)+""+ctr);    
         con.close();
     }
     catch(Exception e){
         System.out.println("Error in generateCode"+e+"\n1043");
     }
   }
 
    /** To update the counter in the table SemaPhores after of Save Button*/  
   private void updateCode(String TableName){
      try{
          accessDB();
          ctr++;
          String ss1 = "UPDATE SemaPhores SET  MaxCtr = "+ctr+" WHERE TableName ='"+TableName+"'";
          stat.executeUpdate(ss1);          
          con.close();
      } 
      catch(Exception e){
         System.out.println("Error in updateCode"+e+"\n1057");
      }
    }
    
    
    /** To record the count of the Column in the Jtable */ 
    public void columnCount(ResultSet r){
       accessDB();
       
       try{
           ResultSetMetaData rMeta=r.getMetaData();
           ColCount=rMeta.getColumnCount();
       }
       catch(Exception ex){
           System.out.println("Error in columnCount "+ex);
       }
              
   }
    
     /** To record the count of the Row in the Jtable */
   public void rowCount(String TableName){
       try{
           sel="Select * from "+TableName;
         
           ResultSet res=stat.executeQuery(sel);
           RowCount=0;
           
          while (res.next())
               RowCount+=1;
       }
       catch(Exception ex)
       {
           System.out.println("Error in rowCount 1 "+ex);
       }
   }
   
    /** To have the count of row in the Jtable */
     public void rowCount(String TableName,String Condition,String Active){
       try{
           sel="Select Count(*) from "+TableName+" where "+Condition+"='"+Active+"'";
          
           ResultSet res=stat.executeQuery(sel);
           RowCount=0;           
           res.next();
               RowCount=Integer.parseInt(res.getString(1));
       }
       catch(Exception ex)
       {
           System.out.println("Error in rowCount 2 "+ex);
       }
   }
    
      /** To Display the Data in the Jtable */
    public void displayData(String TableName,String OrderBy){       
       try{
           accessDB();
           sel="Select * from "+TableName+" ORDER BY "+OrderBy ;
           RowCount=0;
           ResultSet res=stat.executeQuery(sel);
           columnCount(res);
           rowCount(TableName);     
           tableData=new Object [RowCount][ColCount-1];
                   
          for(int row=1;res.next();row++)
          {
              for(int col=1;col<=ColCount-1;col++)
              {                
                  tableData [row-1][col-1]=res.getString(col+1);      
              }
          }      
           con.close();
      }
      catch(Exception ex){
           System.out.println("Error in displayData 1 "+ex);
       }
       getModel();
   }
    
    /** To Display the data from the Database to the Jtable */
    public void displayData(String TableName,String Condition,String Active,String OrderBy){
        try{
            accessDB();
           RowCount=0;
           sel="Select * from "+TableName+" where "+Condition+"='"+Active+"' ORDER BY "+OrderBy;
           ResultSet res=stat.executeQuery(sel);
           columnCount(res);
           rowCount(TableName,Condition,Active);     
           tableData=new Object [RowCount][ColCount-1];
                   
          for(int row=1;res.next();row++)
          {
              for(int col=1;col<=ColCount-1;col++)
              {                 
                  tableData [row-1][col-1]=res.getString(col+1);                
              }
          }      
           con.close();
      }
      catch(Exception ex){
           System.out.println("Error in displayData 2 "+ex);
       }
       getModel();
    }
    
    /** To Initialize the tableModel called in displayData*/
    public void getModel(){
        jTblDisplay.setModel(new javax.swing.table.DefaultTableModel(tableData,new String [] {"Code","Name","Street","Locality","City","Pin","LicenseNO","Email","Phone(Off)","Phone(Res)","Mobile","Fax","Rating","Activate"})
       {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        h=jTblDisplay.getRowHeight()*(RowCount+1);
            if(h<288)
                jScrollPane1.setSize(600,h+18);
            else
                jScrollPane1.setSize(600,290);
    }
    
    /** Null Check Method */
    public void componentNull(){
        if (jTxtSMCode.getText().equals("")){
            JOptionPane.showMessageDialog(this,"Code field should not be Null","Field Null",JOptionPane.INFORMATION_MESSAGE);
            getError="Error";
            jTxtSMCode.requestFocus();
        }  
        else if (jTxtSMName.getText().equals("")){
            JOptionPane.showMessageDialog(this,"Name field should not be Null","Field Null",JOptionPane.INFORMATION_MESSAGE);
            getError="Error";
            jTxtSMName.requestFocus();
        }  
        else if (jTxtSMStreet.getText().equals("")){
            JOptionPane.showMessageDialog(this,"Street field should not be Null","Field Null",JOptionPane.INFORMATION_MESSAGE);
            getError="Error";
            jTxtSMStreet.requestFocus();
        }  
        else if (jTxtSMLocality.getText().equals("")){
            JOptionPane.showMessageDialog(this,"Locality field should not be Null","Field Null",JOptionPane.INFORMATION_MESSAGE);
            getError="Error";
            jTxtSMLocality.requestFocus();
        }  
        else if (jTxtSMCity.getText().equals("")){
            JOptionPane.showMessageDialog(this,"City field should not be Null","Field Null",JOptionPane.INFORMATION_MESSAGE);
            getError="Error";
            jTxtSMCity.requestFocus();
        }  
        else if (jTxtSMPin.getText().equals("")){
            JOptionPane.showMessageDialog(this,"Pin field should not be Null","Field Null",JOptionPane.INFORMATION_MESSAGE);
            getError="Error";
            jTxtSMPin.requestFocus();
        }  
        else if (jTxtSMLicenseNo.getText().equals("")){
            JOptionPane.showMessageDialog(this,"LicenseNo field should not be Null","Field Null",JOptionPane.INFORMATION_MESSAGE);
            getError="Error";
            jTxtSMLicenseNo.requestFocus();
        }  
        else if (jTxtSMEmail.getText().equals("")){
            JOptionPane.showMessageDialog(this,"Email field should not be Null","Field Null",JOptionPane.INFORMATION_MESSAGE);
            getError="Error";
            jTxtSMEmail.requestFocus();
        }  
        else if (jTxtSMOPhone.getText().equals("")){
            JOptionPane.showMessageDialog(this,"Phone(Off) field should not be Null","Field Null",JOptionPane.INFORMATION_MESSAGE);
            getError="Error";
            jTxtSMOPhone.requestFocus();
        }  
        else if (jTxtSMRPhone.getText().equals("")){
            JOptionPane.showMessageDialog(this,"Phone(Res) field should not be Null","Field Null",JOptionPane.INFORMATION_MESSAGE);
            getError="Error";
            jTxtSMRPhone.requestFocus();
        }  
        else if (jTxtSMMobile.getText().equals("")){
            JOptionPane.showMessageDialog(this,"Mobile field should not be Null","Field Null",JOptionPane.INFORMATION_MESSAGE);
            getError="Error";
            jTxtSMMobile.requestFocus();
        }  
        else if (jTxtSMFax.getText().equals("")){
            JOptionPane.showMessageDialog(this,"Fax field should not be Null","Field Null",JOptionPane.INFORMATION_MESSAGE);
            getError="Error";
            jTxtSMFax.requestFocus();
        }  
        else{
        getError="NoError";
        }
    }
    
     /** To Activate Or Inactivate the particular row in the Table */
     public void activate(String Activate,String TableName,String OrderBy){
        accessDB();
        tableRow=jTblDisplay.getSelectedRow();
                
            if (tableRow==-1)
                  tableRow=0;
                 
        try{
          stat.executeUpdate("Update "+TableName+" set Active='"+Activate+"' where SupCode='"+tableData [tableRow][0]+"'");
          con.close();
          displayData(TableName,OrderBy);
        }
        catch(Exception ex)
        {
            System.out.println("Error in activate "+ex);
        }
     }
    
    /** To get all Particular Column values from Table in ComboBox */
     public void comboAddItem(String TableName,javax.swing.JComboBox comboBox,String TableColumn){
         
         accessDB();
         try{
             ResultSet res=stat.executeQuery("Select "+TableColumn+" from "+TableName);
             comboBox.removeAllItems();
             while (res.next()){
                 comboBox.addItem(res.getString(1));
             }
         }
         catch(Exception ex){
             System.out.println("Error in comboAddItem "+ex);
         }
     }
    
    /** sorts the Strings in alphabatic order and used in search method below */ 
    public void sortStrings(Object [][] rawData,int rows,int colNo,javax.swing.JList listSearch){
         list.removeAllElements();
         sorted=new String[rows];
         unsorted=new String[rows]; 
         
         for(j=0;j<rows;j++){
            unsorted[j]=((String)(rawData[j][colNo])).trim();
            sorted[j]=unsorted[j];  
         }
         for (j=0;j<rows;j++){
             for(i=j+1;i<rows;i++){
                 if (sorted[i].compareToIgnoreCase(sorted[j])<0){
                     String temp=sorted[j];
                     sorted[j]=sorted[i];
                     sorted[i]=temp;                     
                 }
             }
         }
         for(int k=0;k<rows;k++){
             list.addElement(sorted[k]);
             listSearch.setListData(list);
         }
     }
     
     /** method supporting the search method below*/
     public void displaySearch(javax.swing.JList listSearch){
         for(i=0;i<sorted.length;i++){
             if (sorted[i].regionMatches(true,0,key,0,key.length())){
                 listSearch.setSelectedValue(sorted[i],true);
                 eleFound=true;
                 break;
             }
         }
         if(!eleFound)
             JOptionPane.showMessageDialog(this,"No match found","Sorry",JOptionPane.ERROR_MESSAGE);
         
         eleFound=false;
     }
     
    
     /** display the text in the jListSearch in alphabatic order */
     public void search(javax.swing.JList listSearch){
      if(RowCount>=1){
         if (jRBtnSMComplete.isSelected()){
             displayData("SupplierMaster","SupName");
             list = new Vector(RowCount);
             if(jCboSMSearch.getSelectedItem().equals("Supplier Code"))
                 sortStrings(tableData,RowCount,0,listSearch);
             else
                 sortStrings(tableData,RowCount,1,listSearch);

             displaySearch(listSearch);
              jTblDisplay.clearSelection();      
             int index=searchElement(  (String)( jListSMSearch.getSelectedValue() )  ,unsorted   );
             jTblDisplay.changeSelection( index ,0,true,false);
        }
        else if(jRBtnSMActive.isSelected()){
            displayData("SupplierMaster","Active","Y","SupName");
             list = new Vector(RowCount);
             if(jCboSMSearch.getSelectedItem().equals("Supplier Code"))
                 sortStrings(tableData,RowCount,0,listSearch);
             else
                 sortStrings(tableData,RowCount,1,listSearch);

             displaySearch(listSearch);
             jTblDisplay.clearSelection();      
             int index=searchElement(  (String)( jListSMSearch.getSelectedValue() )  ,unsorted   );
             jTblDisplay.changeSelection( index ,0,true,false);
        }
        else if(jRBtnSMInActive.isSelected()){
            displayData("SupplierMaster","Active","N","SupName");
             list = new Vector(RowCount);
             if(jCboSMSearch.getSelectedItem().equals("Supplier Code"))
                 sortStrings(tableData,RowCount,0,listSearch);
             else
                 sortStrings(tableData,RowCount,1,listSearch);

             displaySearch(listSearch);
             jTblDisplay.clearSelection();      
             int index=searchElement(  (String)( jListSMSearch.getSelectedValue() )  ,unsorted   );
             jTblDisplay.changeSelection( index ,0,true,false);
        }
       }
     }
     
     /** To get the row Count of the Jtable on selection of an item in listSearch */
     private int searchElement(String key, String[] a) {
        int indx=-1;
        for(i=0;i<a.length;i++){
            if( key.equals(a[i]) )
                indx=i;
        }            
        return indx;
     }
      
      /** Changes to be performed on click of Search Button */
      private void searchPressed(){
       if(RowCount==0){
           JOptionPane.showMessageDialog(this,"Database is Empty, Add new Data","Search",JOptionPane.INFORMATION_MESSAGE);
       }      
       else{        
        jPnlSMSearch.setVisible(true);
        jPnlSMAdd.setVisible(false);
        jPnlSMView.setVisible(true);
        jCboSMSearch.setSelectedIndex(0); 
        jListSMSearch.setSelectedIndex(0);
        jTblDisplay.clearSelection();
        int rowIndex=searchElement(  (String)( jListSMSearch.getSelectedValue() )  ,unsorted   );        
        jBtnSMModify.setEnabled(false);
        jBtnSMSearch.setEnabled(false);
        jTxtSMSearch.requestFocus();
        jTxtSMSearch.setText(""+jListSMSearch.getSelectedValue());
        jTxtSMSearch.selectAll();
        jTblDisplay.clearSelection();
        jTblDisplay.changeSelection( rowIndex ,0,true,false);       
        jRBtnSMComplete.setEnabled(false);
        jRBtnSMActive.setEnabled(false);
        jRBtnSMInActive.setEnabled(false);        
       }
     }
     
    /** Action to be performed on click of modify button */
     public void modify(){
         ModFlag=true;
          if (selrow==-1)
             selrow=0;
         
      if(jTblDisplay.getValueAt(selrow,13).equals("N"))
           JOptionPane.showMessageDialog(this,"Cannot Modify the InActivate Record","Information",JOptionPane.INFORMATION_MESSAGE);         
      else if (!jRBtnSMInActive.isSelected()){   
        jPnlSMAdd.setVisible(true);
        jPnlSMView.setVisible(false);        
        clearText();
        tableRow=jTblDisplay.getSelectedRow();
        
            if (tableRow==-1)
                  tableRow=0;
        
        jTxtSMCode.setText((String)(tableData [tableRow][0]));        
        jTxtSMName.setText((String)(tableData [tableRow][1]));
        jTxtSMStreet.setText((String)(tableData [tableRow][2]));
        jTxtSMLocality.setText((String)(tableData [tableRow][3]));
        jTxtSMCity.setText((String)(tableData [tableRow][4]));
        jTxtSMPin.setText((String)(tableData [tableRow][5]));
        jTxtSMEmail.setText((String)tableData [tableRow][6]);
        jTxtSMOPhone.setText((String)tableData [tableRow][7]);
        jTxtSMLicenseNo.setText((String)(tableData [tableRow][8]));
        jTxtSMRPhone.setText((String)(tableData [tableRow][9]));
        jTxtSMMobile.setText((String)(tableData [tableRow][10]));        
        jTxtSMFax.setText((String)(tableData [tableRow][11]));
        jCboSMRating.setSelectedItem((String)(tableData [tableRow][12]));
        jTxtSMName.requestFocus();
        jTxtSMName.selectAll();
      }
      else
          jBtnSMModify.setEnabled(false); 
     }
    
    
    /** Method allows to enter unique value in the text field*/
    public void uniqueEntry(String findField,String Table,String inField,javax.swing.JTextField jTxtField){
        accessDB();
        try{         
             String select;
             select="Select "+findField+" from "+Table+" where "+findField+" IN ('"+inField+"')";
             ResultSet res=stat.executeQuery(select);
          if(!ModFlag){   
                if(res.next()){                             
                      jTxtField.requestFocus();
                      jTxtField.setText("");
                      con.close();        
                      JOptionPane.showMessageDialog(this,"Field Value already exists","UniqueEntry",JOptionPane.INFORMATION_MESSAGE);  
                }
          }
             con.close();
        }
        catch(Exception ex){
            System.out.println("Error in Unique Entry "+ex);
        }
    }
    
    
    /** Allow Only Numbers to be entered in the text field */
    public void numberOnly(java.awt.event.KeyEvent num,javax.swing.JTextField jTxt){
         int KeyCode= num.getKeyCode();
         char KeyChar=num.getKeyChar();
         String KeyEntered="";
         StringBuffer StoreString;
         if (KeyCode >= 48 && KeyCode <= 57 || KeyCode==46 ){
             // Key Code of Numbers  
            KeyEntered+=String.valueOf(KeyChar);
            KeyEntered=KeyEntered.trim();
         }
         else if (KeyCode >= 96 && KeyCode <= 105 || KeyCode==110){
             KeyEntered+=String.valueOf(KeyChar);
             KeyEntered=KeyEntered.trim();;//Side Pallete Numbers and Dot
         }
         else if (KeyCode >= 37 && KeyCode <= 40){
             ;//up,down,right,left arrows    
         }
         else if (KeyCode >= 0 && KeyCode <= 32 || KeyCode==127){
             ;//Key code of non printable characters  
         }
         else{
             //System.out.println(KeyCode);
              StoreString=new StringBuffer(KeyEntered);
            if (StoreString.length()>0){
            StoreString.setLength(StoreString.length()-1);
            }
              KeyEntered=StoreString.toString();
              JOptionPane.showMessageDialog(this,"Enter Only Numbers","Number Only",JOptionPane.ERROR_MESSAGE);
              jTxt.setText(KeyEntered);
         }  
     }  
    
    /**
    * @param args the command line arguments
    */
    /*public static void main(String args[]) {
        new SupplierMaster().show();
    }//*/


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBtnSMSearchClose;
    private javax.swing.JButton jBtnSMModify;
    private javax.swing.JLabel jLblSMOPhone;
    private javax.swing.JTextField jTxtSMRPhone;
    private javax.swing.JPanel jPnlSMAdd;
    private javax.swing.JLabel jLblSMMain;
    private javax.swing.JTabbedPane jTPSMAddress;
    private javax.swing.JLabel jLblSMMobile;
    private javax.swing.JTextField jTxtSMFax;
    private javax.swing.JRadioButton jRBtnSMInActive;
    private javax.swing.JButton jBtnSMCancel;
    private javax.swing.JTextField jTxtSMSearch;
    private javax.swing.JPanel jPnlSMAddress;
    private javax.swing.JButton jBtnSMSearch;
    private javax.swing.JLabel jLblSMEmail;
    private javax.swing.JTextField jTxtSMPin;
    private javax.swing.JButton jBtnSMInActivate;
    private javax.swing.JScrollPane jSPaneSM;
    private javax.swing.JLabel jLblSMLocality;
    private javax.swing.JTextField jTxtSMLicenseNo;
    private javax.swing.JLabel jLblSMCode;
    private javax.swing.JPanel jPnlSMSearch;
    private javax.swing.JTextField jTxtSMCity;
    private javax.swing.JTextField jTxtSMLocality;
    private javax.swing.JLabel jLblSMName;
    private javax.swing.JLabel jLblSMCity;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel jLblSMLicenseNo;
    private javax.swing.JTextField jTxtSMCode;
    private javax.swing.JRadioButton jRBtnSMActive;
    private javax.swing.JPanel jPnlSMViewOption;
    private javax.swing.JTextField jTxtSMMobile;
    private javax.swing.JButton jBtnSMAdd;
    private javax.swing.JLabel jLblSMRPhone;
    private javax.swing.JTextField jTxtSMEmail;
    private javax.swing.JButton jBtnSMSave;
    private javax.swing.JComboBox jCboSMRating;
    private javax.swing.JLabel jLblSMRating;
    private javax.swing.JLabel jLblSMPin;
    private javax.swing.JLabel jLblSMFax;
    private javax.swing.JComboBox jCboSMSearch;
    private javax.swing.JList jListSMSearch;
    private javax.swing.JTable jTblDisplay;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JTextField jTxtSMOPhone;
    private javax.swing.JButton jBtnSMAddSearch;
    private javax.swing.JTextField jTxtSMName;
    private javax.swing.JRadioButton jRBtnSMComplete;
    private javax.swing.JTextField jTxtSMStreet;
    private javax.swing.JPanel jPnlSMView;
    private javax.swing.JButton jBtnSMActivate;
    private javax.swing.JLabel jLblSMStreet;
    private javax.swing.JButton jBtnSMExit;
    // End of variables declaration//GEN-END:variables
    
    Connection con;
    Statement stat;
    String getError="",key="",sel="",unsorted[],sorted[];    
    Vector v=new Vector();
    Object tableData[][];    
    Vector list;    
    boolean eleFound,codeRepeated=false,ModFlag=false,clickH=false,NoNewSaveError=false;
    int j=0,h=0,i=0,ColCount=0,RowCount=0,tableRow=0,ctr=0,selrow=0;    
    StringBuffer sb;   
}

