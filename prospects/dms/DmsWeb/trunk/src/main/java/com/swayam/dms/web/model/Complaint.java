package com.swayam.dms.web.model;

// Generated May 12, 2008 1:40:30 AM by Hibernate Tools 3.2.1.GA

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Complaint generated by hbm2java
 */
@Entity
@Table(name = "complaint")
public class Complaint implements java.io.Serializable {

    private int complaintId;
    private User assignedTo;
    private ComplaintStatus complaintStatus;
    private Department department;
    private Complainant complainant;
    private User loggedBy;
    private ComplaintPriority complaintPriority;
    private ComplaintType complaintType;
    private Ward ward;
    private Date raisedDate;
    private Date resolvedDate;
    private String details;
    private Set<ComplaintHistory> complaintHistories = new HashSet<ComplaintHistory>(
            0);

    public Complaint() {
    }

    public Complaint(int complaintId, ComplaintStatus complaintStatus,
            Department department, Complainant complainant,
            User employeeByLoggedBy, ComplaintPriority complaintPriority,
            ComplaintType complaintType, Ward ward, Date raisedDate) {
        this.complaintId = complaintId;
        this.complaintStatus = complaintStatus;
        this.department = department;
        this.complainant = complainant;
        this.loggedBy = employeeByLoggedBy;
        this.complaintPriority = complaintPriority;
        this.complaintType = complaintType;
        this.ward = ward;
        this.raisedDate = raisedDate;
    }

    public Complaint(int complaintId, User employeeByAssignedTo,
            ComplaintStatus complaintStatus, Department department,
            Complainant complainant, User employeeByLoggedBy,
            ComplaintPriority complaintPriority, ComplaintType complaintType,
            Ward ward, Date raisedDate, Date resolvedDate, String details,
            Set<ComplaintHistory> complaintHistories) {
        this.complaintId = complaintId;
        this.assignedTo = employeeByAssignedTo;
        this.complaintStatus = complaintStatus;
        this.department = department;
        this.complainant = complainant;
        this.loggedBy = employeeByLoggedBy;
        this.complaintPriority = complaintPriority;
        this.complaintType = complaintType;
        this.ward = ward;
        this.raisedDate = raisedDate;
        this.resolvedDate = resolvedDate;
        this.details = details;
        this.complaintHistories = complaintHistories;
    }

    @Id
    @Column(name = "complaint_id", unique = true, nullable = false)
    @GeneratedValue(strategy = GenerationType.AUTO)
    public int getComplaintId() {
        return this.complaintId;
    }

    public void setComplaintId(int complaintId) {
        this.complaintId = complaintId;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "assigned_to")
    public User getAssignedTo() {
        return this.assignedTo;
    }

    public void setAssignedTo(User assignedTo) {
        this.assignedTo = assignedTo;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "complaint_status_id", nullable = false)
    public ComplaintStatus getComplaintStatus() {
        return this.complaintStatus;
    }

    public void setComplaintStatus(ComplaintStatus complaintStatus) {
        this.complaintStatus = complaintStatus;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "department_id", nullable = false)
    public Department getDepartment() {
        return this.department;
    }

    public void setDepartment(Department department) {
        this.department = department;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "complainant_id", nullable = false)
    public Complainant getComplainant() {
        return this.complainant;
    }

    public void setComplainant(Complainant complainant) {
        this.complainant = complainant;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "logged_by", nullable = false)
    public User getLoggedBy() {
        return this.loggedBy;
    }

    public void setLoggedBy(User employeeByLoggedBy) {
        this.loggedBy = employeeByLoggedBy;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "complaint_priority_id", nullable = false)
    public ComplaintPriority getComplaintPriority() {
        return this.complaintPriority;
    }

    public void setComplaintPriority(ComplaintPriority complaintPriority) {
        this.complaintPriority = complaintPriority;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "complaint_type_id", nullable = false)
    public ComplaintType getComplaintType() {
        return this.complaintType;
    }

    public void setComplaintType(ComplaintType complaintType) {
        this.complaintType = complaintType;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "ward_id", nullable = false)
    public Ward getWard() {
        return this.ward;
    }

    public void setWard(Ward ward) {
        this.ward = ward;
    }

    @Temporal(TemporalType.DATE)
    @Column(name = "raised_date", nullable = false, length = 4)
    public Date getRaisedDate() {
        return this.raisedDate;
    }

    public void setRaisedDate(Date raisedDate) {
        this.raisedDate = raisedDate;
    }

    @Temporal(TemporalType.DATE)
    @Column(name = "resolved_date", length = 4)
    public Date getResolvedDate() {
        return this.resolvedDate;
    }

    public void setResolvedDate(Date resolvedDate) {
        this.resolvedDate = resolvedDate;
    }

    @Column(name = "details")
    public String getDetails() {
        return this.details;
    }

    public void setDetails(String details) {
        this.details = details;
    }

    @OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "complaint")
    public Set<ComplaintHistory> getComplaintHistories() {
        return this.complaintHistories;
    }

    public void setComplaintHistories(Set<ComplaintHistory> complaintHistories) {
        this.complaintHistories = complaintHistories;
    }

}
